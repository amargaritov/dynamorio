diff --git a/.gitignore b/.gitignore
new file mode 100644
index 00000000..5933e91e
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,3 @@
+build/*
+debug/*
+*.sw?
diff --git a/README.md b/README.md
index a800aa41..6f6b14fc 100644
--- a/README.md
+++ b/README.md
@@ -1,60 +1,42 @@
-# DynamoRIO
-
-![DynamoRIO logo](http://www.burningcutlery.com/images/dynamorio/drlogo.png)
-
-## About DynamoRIO
-
-DynamoRIO is a runtime code manipulation system that supports code
-transformations on any part of a program, while it executes. DynamoRIO
-exports an interface for building dynamic tools for a wide variety of uses:
-program analysis and understanding, profiling, instrumentation,
-optimization, translation, etc. Unlike many dynamic tool systems, DynamoRIO
-is not limited to insertion of callouts/trampolines and allows arbitrary
-modifications to application instructions via a powerful IA-32/AMD64/ARM/AArch64
-instruction manipulation library. DynamoRIO provides efficient,
-transparent, and comprehensive manipulation of unmodified applications
-running on stock operating systems (Windows, Linux, or Android) and commodity
-IA-32, AMD64, ARM, and AArch64 hardware.  Mac OSX support is in progress.
-
-## Existing DynamoRIO-based tools
-
-Tools built on DynamoRIO and provided in our release package include:
-
-- The memory debugging tool [Dr. Memory](http://drmemory.org)
-- The multi-process cache simulator and memory address trace collection and
-  analysis platform [drcachesim](http://dynamorio.org/docs/page_drcachesim.html)
-- The legacy processor emulator
-  [drcpusim](http://dynamorio.org/docs/page_drcpusim.html)
-- The "strace for Windows" tool [drstrace](http://drmemory.org/strace_for_windows.html)
-- The code coverage tool [drcov](http://dynamorio.org/docs/page_drcov.html)
-- The library tracing tool [drltrace](https://github.com/DynamoRIO/drmemory/tree/master/drltrace)
-- The memory tracing tool [memtrace](https://github.com/DynamoRIO/dynamorio/blob/master/api/samples/memtrace_simple.c)
-- The basic block tracing tool [bbbuf](https://github.com/DynamoRIO/dynamorio/blob/master/api/samples/bbbuf.c)
-- The instruction counting tool [inscount](https://github.com/DynamoRIO/dynamorio/blob/master/api/samples/inscount.cpp)
-
-## Building your own custom tools
-
-DynamoRIO's powerful API abstracts away the details of the underlying
-infrastructure and allows the tool builder to concentrate on analyzing or
-modifying the application's runtime code stream.  API documentation is
-included in the release package and can also be [browsed
-online](http://dynamorio.org/docs/).  [Slides from our past tutorials are
-also available](https://github.com/DynamoRIO/dynamorio/wiki/Downloads).
-
-## Downloading DynamoRIO
-
-DynamoRIO is available free of charge as a [binary package for both Windows
-and Linux](https://github.com/DynamoRIO/dynamorio/wiki/Downloads).
-DynamoRIO's [source code is
-available](https://github.com/DynamoRIO/dynamorio) under a [BSD
-license](https://github.com/DynamoRIO/dynamorio/blob/master/License.txt).
-
-## Obtaining Help
-
-Use the [discussion list](http://groups.google.com/group/DynamoRIO-Users)
-to ask questions.
-
-To report a bug, use the [issue
-tracker](https://github.com/DynamoRIO/dynamorio/issues).
-
-See also [the DynamoRIO home page](http://dynamorio.org/): [http://dynamorio.org/](http://dynamorio.org/)
+1. Set up environment variables
+```bash
+source source.sh
+```
+
+2. Install/Build the tracer
+```bash
+./install.sh
+```
+
+3. Run the simulator 
+Example:
+```bash
+#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+# SETTTINGS
+TRACE_DIR=/disk/local/traces/mcf/
+OUTPUT_FILE=./mcf.res
+
+#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+TRACE=$(find $TRACE_DIR -maxdepth 1 -name "drmemtrace*" -type d)
+$SIMULATOR_DIR/build/bin64/drrun -t drcachesim \
+                    -indir $TRACE \
+                    -pt_dump_file $TRACE_DIR/pt_dump \
+                    -warmup_refs     300000000                   \
+                    -TLB_L1I_entries 64                          \
+                    -TLB_L1I_assoc   8                           \
+                    -TLB_L1D_entries 64                          \
+                    -TLB_L1D_assoc   8                           \
+                    -TLB_L2_entries  1024                        \
+                    -TLB_L1D_assoc   8                           \
+                    -L1I_size  $(( 32 * 1024 ))                  \
+                    -L1I_assoc 8                                 \
+                    -L1D_size  $(( 32 * 1024 ))                  \
+                    -L1D_assoc 8                                 \
+                    -L2_size   $(( 256 * 1024 ))                 \
+                    -L2_assoc  8                                 \
+                    -LL_size   $(( 16 * 1024 * 1024 ))           \
+                    -LL_assoc  16                                \
+                    > $OUTPUT_FILE 2>&1 & pid=$! &
+```
diff --git a/README.md_default b/README.md_default
new file mode 100644
index 00000000..a800aa41
--- /dev/null
+++ b/README.md_default
@@ -0,0 +1,60 @@
+# DynamoRIO
+
+![DynamoRIO logo](http://www.burningcutlery.com/images/dynamorio/drlogo.png)
+
+## About DynamoRIO
+
+DynamoRIO is a runtime code manipulation system that supports code
+transformations on any part of a program, while it executes. DynamoRIO
+exports an interface for building dynamic tools for a wide variety of uses:
+program analysis and understanding, profiling, instrumentation,
+optimization, translation, etc. Unlike many dynamic tool systems, DynamoRIO
+is not limited to insertion of callouts/trampolines and allows arbitrary
+modifications to application instructions via a powerful IA-32/AMD64/ARM/AArch64
+instruction manipulation library. DynamoRIO provides efficient,
+transparent, and comprehensive manipulation of unmodified applications
+running on stock operating systems (Windows, Linux, or Android) and commodity
+IA-32, AMD64, ARM, and AArch64 hardware.  Mac OSX support is in progress.
+
+## Existing DynamoRIO-based tools
+
+Tools built on DynamoRIO and provided in our release package include:
+
+- The memory debugging tool [Dr. Memory](http://drmemory.org)
+- The multi-process cache simulator and memory address trace collection and
+  analysis platform [drcachesim](http://dynamorio.org/docs/page_drcachesim.html)
+- The legacy processor emulator
+  [drcpusim](http://dynamorio.org/docs/page_drcpusim.html)
+- The "strace for Windows" tool [drstrace](http://drmemory.org/strace_for_windows.html)
+- The code coverage tool [drcov](http://dynamorio.org/docs/page_drcov.html)
+- The library tracing tool [drltrace](https://github.com/DynamoRIO/drmemory/tree/master/drltrace)
+- The memory tracing tool [memtrace](https://github.com/DynamoRIO/dynamorio/blob/master/api/samples/memtrace_simple.c)
+- The basic block tracing tool [bbbuf](https://github.com/DynamoRIO/dynamorio/blob/master/api/samples/bbbuf.c)
+- The instruction counting tool [inscount](https://github.com/DynamoRIO/dynamorio/blob/master/api/samples/inscount.cpp)
+
+## Building your own custom tools
+
+DynamoRIO's powerful API abstracts away the details of the underlying
+infrastructure and allows the tool builder to concentrate on analyzing or
+modifying the application's runtime code stream.  API documentation is
+included in the release package and can also be [browsed
+online](http://dynamorio.org/docs/).  [Slides from our past tutorials are
+also available](https://github.com/DynamoRIO/dynamorio/wiki/Downloads).
+
+## Downloading DynamoRIO
+
+DynamoRIO is available free of charge as a [binary package for both Windows
+and Linux](https://github.com/DynamoRIO/dynamorio/wiki/Downloads).
+DynamoRIO's [source code is
+available](https://github.com/DynamoRIO/dynamorio) under a [BSD
+license](https://github.com/DynamoRIO/dynamorio/blob/master/License.txt).
+
+## Obtaining Help
+
+Use the [discussion list](http://groups.google.com/group/DynamoRIO-Users)
+to ask questions.
+
+To report a bug, use the [issue
+tracker](https://github.com/DynamoRIO/dynamorio/issues).
+
+See also [the DynamoRIO home page](http://dynamorio.org/): [http://dynamorio.org/](http://dynamorio.org/)
diff --git a/build.sh b/build.sh
new file mode 100755
index 00000000..3555672a
--- /dev/null
+++ b/build.sh
@@ -0,0 +1,3 @@
+pushd $SIMULATOR_DIR/build
+make -j
+popd
diff --git a/build.sh.bak b/build.sh.bak
new file mode 100755
index 00000000..3555672a
--- /dev/null
+++ b/build.sh.bak
@@ -0,0 +1,3 @@
+pushd $SIMULATOR_DIR/build
+make -j
+popd
diff --git a/build_debug.sh b/build_debug.sh
new file mode 100755
index 00000000..9612d5e5
--- /dev/null
+++ b/build_debug.sh
@@ -0,0 +1,3 @@
+pushd $SIMULATOR_DIR/debug
+make -j
+popd
diff --git a/clients/drcachesim/analysis_tool.h b/clients/drcachesim/analysis_tool.h
index daa3212f..b36b1d3a 100644
--- a/clients/drcachesim/analysis_tool.h
+++ b/clients/drcachesim/analysis_tool.h
@@ -85,6 +85,9 @@ public:
      */
     virtual bool
     process_memref(const memref_t &memref) = 0;
+
+    virtual std::pair<bool,bool>
+    process_memref(const memref_t &memref, bool changed) {return std::pair<bool,bool>(true, true);} ;
     /**
      * This routine reports the results of the trace analysis.
      * The return value indicates whether it was successful.
diff --git a/clients/drcachesim/common/memref.h b/clients/drcachesim/common/memref.h
index 024e088e..b79980c4 100644
--- a/clients/drcachesim/common/memref.h
+++ b/clients/drcachesim/common/memref.h
@@ -126,4 +126,16 @@ typedef union _memref_t {
     struct _memref_marker_t marker;    /**< A marker holding metadata. */
 } memref_t;
 
+typedef enum {
+     NOT_FOUND
+   , FOUND_L1
+   , FOUND_L2
+   , FOUND_LLC
+   , WRONG
+   , RANGE_HIT
+   , RANGE_MISS
+   , PWC
+   , ZERO
+} cache_result_t;
+
 #endif /* _MEMREF_H_ */
diff --git a/clients/drcachesim/common/options.cpp b/clients/drcachesim/common/options.cpp
index f853a9e7..7ffce096 100644
--- a/clients/drcachesim/common/options.cpp
+++ b/clients/drcachesim/common/options.cpp
@@ -89,7 +89,8 @@ droption_t<bytesize_t> op_L1I_size(
     "and a multiple of -line_size.");
 
 droption_t<bytesize_t>
-    op_L1D_size(DROPTION_SCOPE_FRONTEND, "L1D_size", bytesize_t(32 * 1024),
+//    op_L1D_size(DROPTION_SCOPE_FRONTEND, "L1D_size", bytesize_t(32 * 1024),
+    op_L1D_size(DROPTION_SCOPE_FRONTEND, "L1D_size", 32 * 1024U,
                 "Data cache total size",
                 "Specifies the total size of each L1 data cache.  Must be a power of 2 "
                 "and a multiple of -line_size.");
@@ -102,12 +103,22 @@ droption_t<unsigned int> op_L1D_assoc(
     DROPTION_SCOPE_FRONTEND, "L1D_assoc", 8, "Data cache associativity",
     "Specifies the associativity of each L1 data cache.  Must be a power of 2.");
 
+droption_t<unsigned int> op_L2_assoc(
+    DROPTION_SCOPE_FRONTEND, "L2_assoc", 8, "Data cache associativity",
+    "Specifies the associativity of each L2 data cache.  Must be a power of 2.");
+
 droption_t<bytesize_t> op_LL_size(DROPTION_SCOPE_FRONTEND, "LL_size", 8 * 1024 * 1024,
                                   "Last-level cache total size",
                                   "Specifies the total size of the unified last-level "
                                   "(L2) cache.  Must be a power of 2 "
                                   "and a multiple of -line_size.");
 
+droption_t<bytesize_t> op_L2_size(DROPTION_SCOPE_FRONTEND, "L2_size", 256 * 1024,
+                                  "Last-level cache total size",
+                                  "Specifies the total size of the unified last-level "
+                                  "(L2) cache.  Must be a power of 2 "
+                                  "and a multiple of -line_size.");
+
 droption_t<unsigned int>
     op_LL_assoc(DROPTION_SCOPE_FRONTEND, "LL_assoc", 16, "Last-level cache associativity",
                 "Specifies the associativity of the unified last-level (L2) cache.  "
@@ -124,6 +135,28 @@ droption_t<std::string> op_LL_miss_file(
     "analysis be written to the specified file. Each hint is written in text format as a "
     "<program counter, stride, locality level> tuple.");
 
+droption_t<std::string> op_pt_dump_file(
+    DROPTION_SCOPE_FRONTEND, "pt_dump_file", "",
+    "Path for loading page table from",
+    "");
+
+droption_t<std::string> op_pt_ranges_file(
+    DROPTION_SCOPE_FRONTEND, "pt_ranges_file", "",
+    "Path for loading ranges from",
+    "");
+
+droption_t<unsigned int> op_num_ranges(
+    DROPTION_SCOPE_FRONTEND, "num_ranges", 10, "",
+    "Number of ranges.");
+
+droption_t<unsigned int> op_contention_L1(
+    DROPTION_SCOPE_FRONTEND, "contention_L1", 0, "",
+    "Number of cont L1.");
+
+droption_t<unsigned int> op_contention_LLC(
+    DROPTION_SCOPE_FRONTEND, "contention_LLC", 0, "",
+    "Number of cont LLC.");
+
 droption_t<bool> op_L0_filter(
     DROPTION_SCOPE_CLIENT, "L0_filter", false,
     "Filter out zero-level hits during tracing",
diff --git a/clients/drcachesim/common/options.h b/clients/drcachesim/common/options.h
index df8b0049..2357e0f9 100644
--- a/clients/drcachesim/common/options.h
+++ b/clients/drcachesim/common/options.h
@@ -70,9 +70,16 @@ extern droption_t<bytesize_t> op_L1I_size;
 extern droption_t<bytesize_t> op_L1D_size;
 extern droption_t<unsigned int> op_L1I_assoc;
 extern droption_t<unsigned int> op_L1D_assoc;
+extern droption_t<unsigned int> op_L2_assoc;
+extern droption_t<unsigned int> op_num_ranges;
+extern droption_t<unsigned int> op_contention_L1;
+extern droption_t<unsigned int> op_contention_LLC;
 extern droption_t<bytesize_t> op_LL_size;
+extern droption_t<bytesize_t> op_L2_size;
 extern droption_t<unsigned int> op_LL_assoc;
 extern droption_t<std::string> op_LL_miss_file;
+extern droption_t<std::string> op_pt_dump_file; 
+extern droption_t<std::string> op_pt_ranges_file;
 extern droption_t<bytesize_t> op_L0I_size;
 extern droption_t<bool> op_L0_filter;
 extern droption_t<bytesize_t> op_L0D_size;
diff --git a/clients/drcachesim/common/trace_entry.h b/clients/drcachesim/common/trace_entry.h
index 0d396201..fb1c46ce 100644
--- a/clients/drcachesim/common/trace_entry.h
+++ b/clients/drcachesim/common/trace_entry.h
@@ -71,6 +71,14 @@ typedef enum {
     TRACE_TYPE_READ,  /**< A data load. */
     TRACE_TYPE_WRITE, /**< A data store. */
 
+    TRACE_TYPE_PE1,  /**< A data load. */
+    TRACE_TYPE_PE2,  /**< A data load. */
+    TRACE_TYPE_PE3,  /**< A data load. */
+    TRACE_TYPE_PE4,  /**< A data load. */
+
+    TRACE_TYPE_CONT_L1,  /**< A data load. */
+    TRACE_TYPE_CONT_LLC,  /**< A data load. */
+
     TRACE_TYPE_PREFETCH, /**< A general prefetch to the level 1 data cache. */
     // X86 specific prefetch
     TRACE_TYPE_PREFETCHT0,  /**< An x86 prefetch to all levels of the cache. */
@@ -279,6 +287,11 @@ struct _trace_entry_t {
         // The length of each instr in the instr bundle
         unsigned char length[sizeof(addr_t)];
     };
+    //union {
+    addr_t phys_addr; // 4/8 bytes: mem ref addr, instr pc, tid, pid, marker val
+    //    // The length of each instr in the instr bundle
+    //    unsigned char length[sizeof(addr_t)];
+    //};
 } END_PACKED_STRUCTURE;
 typedef struct _trace_entry_t trace_entry_t;
 
@@ -346,6 +359,10 @@ struct _offline_entry_t {
             uint64_t addr : 61;
             uint64_t type : 3;
         } addr;
+        struct {
+            uint64_t addr : 61;
+            uint64_t type : 3;
+        } phys_addr;
         struct {
             // This describes the entire basic block.
             uint64_t modoffs : PC_MODOFFS_BITS;
diff --git a/clients/drcachesim/simulator/analyzer_interface.cpp b/clients/drcachesim/simulator/analyzer_interface.cpp
index db8b0630..74f36a07 100644
--- a/clients/drcachesim/simulator/analyzer_interface.cpp
+++ b/clients/drcachesim/simulator/analyzer_interface.cpp
@@ -98,9 +98,16 @@ get_cache_simulator_knobs()
     knobs->L1D_size = op_L1D_size.get_value();
     knobs->L1I_assoc = op_L1I_assoc.get_value();
     knobs->L1D_assoc = op_L1D_assoc.get_value();
+    knobs->L2_size = op_L2_size.get_value();
+    knobs->L2_assoc = op_L2_assoc.get_value();
     knobs->LL_size = op_LL_size.get_value();
     knobs->LL_assoc = op_LL_assoc.get_value();
     knobs->LL_miss_file = op_LL_miss_file.get_value();
+    knobs->contention_L1 = op_contention_L1.get_value(); 
+    knobs->contention_LLC = op_contention_LLC.get_value(); 
+    knobs->pt_dump_filename = op_pt_dump_file.get_value(); 
+    knobs->pt_ranges_file = op_pt_ranges_file.get_value(); 
+    knobs->num_ranges = op_num_ranges.get_value(); 
     knobs->replace_policy = op_replace_policy.get_value();
     knobs->data_prefetcher = op_data_prefetcher.get_value();
     knobs->skip_refs = op_skip_refs.get_value();
@@ -112,6 +119,29 @@ get_cache_simulator_knobs()
     return knobs;
 }
 
+static tlb_simulator_knobs_t *
+get_tlb_simulator_knobs()
+{
+    //Parse TLB params to tlb_knobs
+    tlb_simulator_knobs_t *knobs = new tlb_simulator_knobs_t;
+    knobs->num_cores = op_num_cores.get_value();
+    knobs->page_size = op_page_size.get_value();
+    knobs->TLB_L1I_entries = op_TLB_L1I_entries.get_value();
+    knobs->TLB_L1D_entries = op_TLB_L1D_entries.get_value();
+    knobs->TLB_L1I_assoc = op_TLB_L1I_assoc.get_value();
+    knobs->TLB_L1D_assoc = op_TLB_L1D_assoc.get_value();
+    knobs->TLB_L2_entries = op_TLB_L2_entries.get_value();
+    knobs->TLB_L2_assoc = op_TLB_L2_assoc.get_value();
+    knobs->TLB_replace_policy = op_TLB_replace_policy.get_value();
+    knobs->skip_refs = op_skip_refs.get_value();
+    knobs->warmup_refs = op_warmup_refs.get_value();
+    knobs->warmup_fraction = op_warmup_fraction.get_value();
+    knobs->sim_refs = op_sim_refs.get_value();
+    knobs->verbose = op_verbose.get_value();
+    knobs->cpu_scheduling = op_cpu_scheduling.get_value();
+    return knobs;
+}
+
 analysis_tool_t *
 drmemtrace_analysis_tool_create()
 {
@@ -120,8 +150,10 @@ drmemtrace_analysis_tool_create()
         if (!config_file.empty()) {
             return cache_simulator_create(config_file);
         } else {
+            tlb_simulator_knobs_t *tlb_knobs = get_tlb_simulator_knobs();
             cache_simulator_knobs_t *knobs = get_cache_simulator_knobs();
-            return cache_simulator_create(*knobs);
+            //Pass tlb knobs to the cache simlator creator
+            return cache_simulator_create(*knobs, *tlb_knobs);
         }
     } else if (op_simulator_type.get_value() == MISS_ANALYZER) {
         cache_simulator_knobs_t *knobs = get_cache_simulator_knobs();
diff --git a/clients/drcachesim/simulator/cache.cpp b/clients/drcachesim/simulator/cache.cpp
index 5316b822..dcde7c26 100644
--- a/clients/drcachesim/simulator/cache.cpp
+++ b/clients/drcachesim/simulator/cache.cpp
@@ -33,6 +33,7 @@
 #include "cache.h"
 #include "../common/utils.h"
 #include <assert.h>
+#include <iostream>
 
 bool
 cache_t::init(int associativity_, int line_size_, int total_size,
@@ -40,6 +41,7 @@ cache_t::init(int associativity_, int line_size_, int total_size,
               prefetcher_t *prefetcher_, bool inclusive_,
               const std::vector<caching_device_t *> &children_)
 {
+    std::cerr << "Initialising a cache with size: " << total_size << " with assoc: " << associativity_ << " with line size: " << line_size_ << std::endl;
     // convert total_size to num_blocks to fit for caching_device_t::init
     int num_lines = total_size / line_size_;
 
@@ -55,12 +57,12 @@ cache_t::init_blocks()
     }
 }
 
-void
+cache_result_t
 cache_t::request(const memref_t &memref_in)
 {
     // FIXME i#1726: if the request is a data write, we should check the
     // instr cache and invalidate the cache line there if necessary on x86.
-    caching_device_t::request(memref_in);
+    return caching_device_t::request(memref_in);
 }
 
 void
diff --git a/clients/drcachesim/simulator/cache.h b/clients/drcachesim/simulator/cache.h
index 8ceac93a..47708cfd 100644
--- a/clients/drcachesim/simulator/cache.h
+++ b/clients/drcachesim/simulator/cache.h
@@ -48,8 +48,10 @@ public:
     init(int associativity, int line_size, int total_size, caching_device_t *parent,
          caching_device_stats_t *stats, prefetcher_t *prefetcher = nullptr,
          bool inclusive = false, const std::vector<caching_device_t *> &children = {});
-    virtual void
+    
+    virtual cache_result_t
     request(const memref_t &memref);
+
     virtual void
     flush(const memref_t &memref);
 
diff --git a/clients/drcachesim/simulator/cache_miss_analyzer.cpp b/clients/drcachesim/simulator/cache_miss_analyzer.cpp
index 714ea5ec..b231423b 100644
--- a/clients/drcachesim/simulator/cache_miss_analyzer.cpp
+++ b/clients/drcachesim/simulator/cache_miss_analyzer.cpp
@@ -153,8 +153,11 @@ cache_miss_analyzer_t::cache_miss_analyzer_t(const cache_simulator_knobs_t &knob
                                              unsigned int miss_count_threshold,
                                              double miss_frac_threshold,
                                              double confidence_threshold)
-    : cache_simulator_t(knobs)
+    : cache_simulator_t(knobs, *(new tlb_simulator_knobs_t())) // Hack to remove incompatibility 
+                                                               // with the new type of simulator 
 {
+    std::cout << "THIS FUNCTIONALITY IS UNTESTED. PLEASE USE CLEAN VERSION" << std::endl;
+
     if (!success) {
         return;
     }
diff --git a/clients/drcachesim/simulator/cache_simulator.cpp b/clients/drcachesim/simulator/cache_simulator.cpp
index c938f8f1..65247027 100644
--- a/clients/drcachesim/simulator/cache_simulator.cpp
+++ b/clients/drcachesim/simulator/cache_simulator.cpp
@@ -30,6 +30,19 @@
  * DAMAGE.
  */
 
+// Set properties of Page Walk Caches
+#define NUM_PWC 3
+#define PWC_ENTRY_SIZE 1
+const unsigned int PWC_ASSOC[] = { 1, 4, 4};
+const unsigned int PWC_SIZE[] = { PWC_ENTRY_SIZE * 2, PWC_ENTRY_SIZE * 4, PWC_ENTRY_SIZE * 32};
+
+#define NUM_PAGE_TABLE_LEVELS 4 //Number of PT radix-tree levels
+#define PAGE_TABLE_ENTRY_SIZE 8 //PTE size in bytes
+#define NUM_PAGE_OFFSET_BITS 12 //Number of bit used for addressing withing a page     
+#define NUM_PAGE_INDEX_BITS 9 //Number of address bits used for indexing a level in a radix tree
+#define SIMULATOR_HEARTBEAT_FREQ 22 //Log of number of meminsts to process between two simulator hearbeats
+
+
 #include <iostream>
 #include <iterator>
 #include <string>
@@ -49,10 +62,16 @@
 #include "cache_simulator.h"
 #include "droption.h"
 
+#include <cstdio>
+#include <inttypes.h>
+#include <stdlib.h>
+
+trace_type_t TRACE_TYPE[] = { TRACE_TYPE_READ, TRACE_TYPE_PE1, TRACE_TYPE_PE2, TRACE_TYPE_PE3, TRACE_TYPE_PE4 };
+
 analysis_tool_t *
-cache_simulator_create(const cache_simulator_knobs_t &knobs)
+cache_simulator_create(const cache_simulator_knobs_t &knobs, const tlb_simulator_knobs_t &tlb_knobs)
 {
-    return new cache_simulator_t(knobs);
+    return new cache_simulator_t(knobs, tlb_knobs);
 }
 
 analysis_tool_t *
@@ -61,19 +80,76 @@ cache_simulator_create(const std::string &config_file)
     return new cache_simulator_t(config_file);
 }
 
-cache_simulator_t::cache_simulator_t(const cache_simulator_knobs_t &knobs_)
+cache_simulator_t::cache_simulator_t(const cache_simulator_knobs_t &knobs_, const tlb_simulator_knobs_t &tlb_knobs_)
     : simulator_t(knobs_.num_cores, knobs_.skip_refs, knobs_.warmup_refs,
                   knobs_.warmup_fraction, knobs_.sim_refs, knobs_.cpu_scheduling,
                   knobs_.verbose)
     , knobs(knobs_)
     , l1_icaches(NULL)
     , l1_dcaches(NULL)
+    , l2_caches(NULL)
+    , pw_caches(NULL)
     , is_warmed_up(false)
 {
     // XXX i#1703: get defaults from hardware being run on.
 
+    // Create TLB(s)
+    tlb_sim = new tlb_simulator_t(tlb_knobs_);
+
+    /* initialize random seed: */
+    srand (42);
+
+    std::cout << "Initialising PT from file: " << knobs.pt_dump_filename.c_str() << std::endl;
+// load page table
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wunused-result" 
+    //load page_table
+    FILE* page_table_file = fopen(knobs.pt_dump_filename.c_str(),"r");
+    //read page_table size (in records)
+    int page_table_record_num = 0;
+    fscanf(page_table_file, "%d\n", &page_table_record_num);
+    std::cerr << "Loading page table with " <<  page_table_record_num << " PT entries...\n";
+    for (int i = 0; i < page_table_record_num; i++) {
+      page_table_info_t tmp;
+      fscanf(page_table_file, "%llx,%llx,%llx,%llx,%llx,%llx\n", &(tmp.VA), &(tmp.PE1), &(tmp.PE2), &(tmp.PE3), &(tmp.PE4), &(tmp.PA));
+      page_table.insert(std::make_pair(tmp.VA, tmp));
+    }
+    std::cerr << "Loaded " << page_table.size() << " unique PT entries.\n";
+    fclose(page_table_file);
+#pragma GCC diagnostic pop 
+
+// load ranges
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wunused-result" 
+    if (knobs.pt_ranges_file != "") {
+      FILE* range_file = fopen(knobs.pt_ranges_file.c_str(),"r");
+      int range_record_num = 0;
+      fscanf(range_file, "%d\n", &range_record_num);
+      std::cerr << "Loading range with " <<  range_record_num << "total range entries...\n";
+      for (int i = 0; i < range_record_num; i++) {
+        range_info_t tmp;
+        fscanf(range_file, "%llx,%llx\n", &(tmp.l_bound), &(tmp.h_bound));
+        range_table.push_back(tmp);
+        std::cerr << "Added " << tmp.l_bound << " " << tmp.h_bound << std::endl;
+      }
+      std::cerr << "Loaded " << range_table.size() << " unique ranges.\n";
+      fclose(range_file);
+    }
+#pragma GCC diagnostic pop 
+
+
+//    // Debug: print the loaded PT    
+//    for(page_table_t::const_iterator it = page_table.begin();
+//    it != page_table.end(); ++it)
+//    {
+//      std::cout << it->first << " " << it->second.VA << " " << it->second.PA << "\n";
+//    }
+
+    //*********************************************************
+
     // This configuration allows for one shared LLC only.
     cache_t *llc = create_cache(knobs.replace_policy);
+    llc1 = llc;
     if (llc == NULL) {
         success = false;
         return;
@@ -97,13 +173,19 @@ cache_simulator_t::cache_simulator_t(const cache_simulator_knobs_t &knobs_)
         return;
     }
 
-    std::string cache_name = "LL";
+    std::string cache_name = "LLC";
     all_caches[cache_name] = llc;
     llcaches[cache_name] = llc;
 
     l1_icaches = new cache_t *[knobs.num_cores];
     l1_dcaches = new cache_t *[knobs.num_cores];
+    l2_caches =  new cache_t *[knobs.num_cores];
     for (unsigned int i = 0; i < knobs.num_cores; i++) {
+        l2_caches[i] = create_cache(knobs.replace_policy);
+        if (l2_caches[i] == NULL) {
+            success = false;
+            return;
+        }
         l1_icaches[i] = create_cache(knobs.replace_policy);
         if (l1_icaches[i] == NULL) {
             success = false;
@@ -115,33 +197,56 @@ cache_simulator_t::cache_simulator_t(const cache_simulator_knobs_t &knobs_)
             return;
         }
 
-        if (!l1_icaches[i]->init(knobs.L1I_assoc, (int)knobs.line_size,
-                                 (int)knobs.L1I_size, llc,
+        if (!l2_caches[i]->init (knobs.L2_assoc, (int)knobs.line_size,
+                                 (int)knobs.L2_size, llc,
+                                 new cache_stats_t("", warmup_enabled)) || 
+            !l1_icaches[i]->init(knobs.L1I_assoc, (int)knobs.line_size,
+                                 (int)knobs.L1I_size, l2_caches[i],
                                  new cache_stats_t("", warmup_enabled)) ||
             !l1_dcaches[i]->init(knobs.L1D_assoc, (int)knobs.line_size,
-                                 (int)knobs.L1D_size, llc,
+                                 (int)knobs.L1D_size, l2_caches[i],
                                  new cache_stats_t("", warmup_enabled),
                                  knobs.data_prefetcher == PREFETCH_POLICY_NEXTLINE
                                      ? new prefetcher_t((int)knobs.line_size)
                                      : nullptr)) {
-            error_string = "Usage error: failed to initialize L1 caches.  Ensure sizes "
+            error_string = "Usage error: failed to initialize L1 and L2 caches.  Ensure sizes "
                            "and associativity are powers of 2 "
                            "and that the total sizes are multiples of the line size.";
             success = false;
             return;
         }
 
+        cache_name = "L2_Cache_" + std::to_string(i);
+        all_caches[cache_name] = l2_caches[i];
         cache_name = "L1_I_Cache_" + std::to_string(i);
         all_caches[cache_name] = l1_icaches[i];
         cache_name = "L1_D_Cache_" + std::to_string(i);
         all_caches[cache_name] = l1_dcaches[i];
     }
+    pw_caches =  new cache_t *[NUM_PWC];
+    for (unsigned int i = 0; i < NUM_PWC; i++) {
+        pw_caches[i] = create_cache(knobs.replace_policy);
+        if (pw_caches[i] == NULL) {
+            success = false;
+            return;
+        }
+        if (!pw_caches[i]->init (PWC_ASSOC[i], PWC_ENTRY_SIZE,
+                                 PWC_SIZE[i], NULL,
+                                 new cache_stats_t("", warmup_enabled))) {
+            error_string = "Usage error: failed to initialize PW caches.  Ensure sizes "
+                           "and associativity are powers of 2 "
+                           "and that the total sizes are multiples of the line size.";
+            success = false;
+            return;
+        }
+    }
 }
 
 cache_simulator_t::cache_simulator_t(const std::string &config_file)
     : simulator_t()
     , l1_icaches(NULL)
     , l1_dcaches(NULL)
+    , pw_caches(NULL)
     , is_warmed_up(false)
 {
     std::map<std::string, cache_params_t> cache_params;
@@ -281,6 +386,12 @@ cache_simulator_t::~cache_simulator_t()
     if (l1_dcaches != NULL) {
         delete[] l1_dcaches;
     }
+    if (l2_caches != NULL) {
+        delete[] l2_caches;
+    }
+    if (pw_caches != NULL) {
+        delete[] pw_caches;
+    }
 }
 
 uint64_t
@@ -289,9 +400,35 @@ cache_simulator_t::remaining_sim_refs() const
     return knobs.sim_refs;
 }
 
+static uint64_t num_request = 0;
+static uint64_t num_not_found = 0;
+static uint64_t num_request_shifted = 0;
+
+static uint64_t num_range_found = 0;
+static uint64_t num_range_not_found = 0;
+
+cache_result_t issue_contention_request(cache_t* to_cache, trace_type_t type) {
+  addr_t raddr = rand() & ((1L << (NUM_PAGE_TABLE_LEVELS * NUM_PAGE_OFFSET_BITS)) - 1); //Generate a random addess
+  memref_t cont_req_memref; 
+  cont_req_memref.data.type = type;
+  cont_req_memref.data.addr = raddr;
+  cont_req_memref.data.size = 1; //Set size 1 byte
+  cache_result_t res = to_cache->request(cont_req_memref);
+  return res;
+}
+
 bool
 cache_simulator_t::process_memref(const memref_t &memref)
 {
+    num_request++;
+    num_request_shifted++;
+
+    if ((num_request_shifted >> SIMULATOR_HEARTBEAT_FREQ) > 0) {
+      num_request_shifted = 0;
+      std::cerr << "Heartbeat. " << num_request << " references processed.\n";
+      print_results();
+    }
+
     if (knobs.skip_refs > 0) {
         knobs.skip_refs--;
         return true;
@@ -299,17 +436,35 @@ cache_simulator_t::process_memref(const memref_t &memref)
 
     // If no warmup is specified and we have simulated sim_refs then
     // we are done.
-    if ((knobs.warmup_refs == 0 && knobs.warmup_fraction == 0.0) && knobs.sim_refs == 0)
+    if ((knobs.warmup_refs == 0 && knobs.warmup_fraction == 0.0) && knobs.sim_refs == 0) {
+        if (knobs.verbose >= 3) {
+            std::cerr << "No warmup, but have simulation refs -> Done " << memref.data.pid << "." << memref.data.tid << ":: "
+                      << "marker type " << memref.marker.marker_type << " value "
+                      << memref.marker.marker_value << "\n";
+        }
         return true;
+    }
 
     // The references after warmup and simulated ones are dropped.
-    if (check_warmed_up() && knobs.sim_refs == 0)
+    if (check_warmed_up() && knobs.sim_refs == 0) {
+        if (knobs.verbose >= 3) {
+            std::cerr << "The references after warmup and simulated ones are dropped " << memref.data.pid << "." << memref.data.tid << ":: "
+                      << "marker type " << memref.marker.marker_type << " value "
+                      << memref.marker.marker_value << "\n";
+        }
         return true;
+    }
 
     // Both warmup and simulated references are simulated.
 
-    if (!simulator_t::process_memref(memref))
+    if (!simulator_t::process_memref(memref)) {
+        if (knobs.verbose >= 3) {
+            std::cerr << "Both warmup and simulated references are simulated " << memref.data.pid << "." << memref.data.tid << ":: "
+                      << "marker type " << memref.marker.marker_type << " value "
+                      << memref.marker.marker_value << "\n";
+        }
         return false;
+    }
 
     if (memref.marker.type == TRACE_TYPE_MARKER) {
         // We ignore markers before we ask core_for_thread, to avoid asking
@@ -334,64 +489,291 @@ cache_simulator_t::process_memref(const memref_t &memref)
         last_core = core;
     }
 
-    if (type_is_instr(memref.instr.type) ||
-        memref.instr.type == TRACE_TYPE_PREFETCH_INSTR) {
+    uint64_t addr;
+
+    uint64_t virtual_page_addr = 0;
+    uint64_t page_offset = 0;
+    uint64_t physical_page_addr = 0;
+    uint64_t instrs_type = 0;
+
+    if (type_is_instr(memref.instr.type) || memref.instr.type == TRACE_TYPE_PREFETCH_INSTR) {
+      addr              = memref.instr.addr;
+      virtual_page_addr = memref.instr.addr >> NUM_PAGE_OFFSET_BITS;
+      page_offset       = memref.instr.addr & ((1 << NUM_PAGE_OFFSET_BITS) - 1);
+      instrs_type       = 1;
+    } else if (memref.data.type == TRACE_TYPE_READ || memref.data.type == TRACE_TYPE_WRITE || type_is_prefetch(memref.data.type)) {
+      addr              = memref.data.addr;
+      virtual_page_addr = memref.data.addr >> NUM_PAGE_OFFSET_BITS;
+      page_offset       = memref.data.addr & ((1 << NUM_PAGE_OFFSET_BITS) - 1);
+      instrs_type       = 2;
+    }
+
+    uint64_t virtual_full_page_addr = virtual_page_addr << NUM_PAGE_OFFSET_BITS;
+
+    //issue a TLB request
+    std::pair<bool, bool> res = tlb_sim->process_memref_tlb(memref);
+    bool is_TLB_hit = res.second;
+    if (knobs.verbose >= 2) {
+      std::cerr << __FUNCTION__ << " Received TLB result: " << is_TLB_hit << std::endl;
+    }
+
+    memref_t new_memref; 
+    new_memref = memref;
+    new_memref.marker.type = memref.marker.type;
+    new_memref.marker.pid = memref.marker.pid;
+    new_memref.marker.tid = memref.marker.tid;
+    page_table_t::iterator it = page_table.find(virtual_full_page_addr);
+    // if found 
+    if (it != page_table.end()) {
+      
+      physical_page_addr = it->second.PA;
+
+      if (type_is_instr(memref.instr.type) || memref.instr.type == TRACE_TYPE_PREFETCH_INSTR) {
+        new_memref.instr.addr = physical_page_addr + page_offset;
+      } else if (memref.data.type == TRACE_TYPE_READ || memref.data.type == TRACE_TYPE_WRITE || type_is_prefetch(memref.data.type)) {
+        new_memref.data.addr  = physical_page_addr + page_offset;
+      }
+
+      //std::cerr << "Request \n"
+      //              << std::hex 
+      //              << "Type " << ((instrs_type == 1) ? "instr" : "data") << std::endl 
+      //              << "Vddr " << addr <<  std::endl
+      //              << "VAddr >> NUM_PAGE_OFFSET_BITS : " << virtual_page_addr << std::endl
+      //              << "VAddr page_addr : " << (virtual_page_addr << NUM_PAGE_OFFSET_BITS) << std::endl
+      //              << "PAddr page_addr : " << physical_page_addr << std::endl
+      //              << "PAddr page_addr : " << physical_page_addr + page_offset << std::endl
+      //              << std::dec
+      //              << "num_requests : " << num_request << "\n" 
+      //            ;
+
+
+      // process TLB miss
+      if (!is_TLB_hit) {
+        if (knobs.verbose >= 2) {
+          std::cerr << "TLB miss \n";
+        }
+
+        //Check if falls withing a range from the list of ranges (if file containing ranges is provided)
+        bool range_found = false;
+        if (knobs.pt_ranges_file != "") {
+          for (unsigned int i = 0; i < knobs.num_ranges; i++) {
+            if ( (virtual_full_page_addr >= range_table[i].l_bound) && (virtual_full_page_addr < range_table[i].h_bound) ) {
+              range_found = true;
+              break;
+            }
+          }
+        } else {
+          range_found = true;
+        }
+            
+        // reset page walk trajectory path 
+        page_walk_res.clear();// Accumulates sources for each access during a page walk
+
+
+        //BEGIN PAGE WALK 
+        //PT levels are counted from the root of the radix tree
+        // Check PWCs
+        cache_result_t pwc_search_res = NOT_FOUND;
+        unsigned int pwc_hit_level = 0;
+        memref_t pwc_check_memref; 
+        pwc_check_memref.data.type = TRACE_TYPE_READ;
+        // search PWC starting from highest level
+        for(unsigned int pwc_level = NUM_PWC; pwc_level >= 1; pwc_level--) {
+          pwc_check_memref.data.addr = virtual_full_page_addr >> ( NUM_PAGE_OFFSET_BITS + 
+                                                                   ((NUM_PAGE_TABLE_LEVELS - pwc_level) * NUM_PAGE_INDEX_BITS)
+                                                                 );
+          pwc_check_memref.data.size = 1; 
+          pwc_search_res = pw_caches[pwc_level-1]->request(pwc_check_memref);
+          // if found, memorize the pwc_level and stop searching 
+          if (pwc_search_res == FOUND_L1) {
+            if (pwc_hit_level == 0) {
+              pwc_hit_level = pwc_level;
+            }
+          }
+        }
+        // find a record in the host PT corresponding to the given address
+        
+        for (unsigned int level_host = 1; level_host <= NUM_PAGE_TABLE_LEVELS; level_host++) {
+          if (level_host < pwc_hit_level) {
+            // ignore these levels as they are bypassed due to PWC hit
+            // if skipped due to a PWC hit, indicate ZERO_LAT
+            page_walk_res.push_back(ZERO);
+
+          } else if (level_host == pwc_hit_level) {
+            // if found in the PWC, indicate PWC_LAT
+            page_walk_res.push_back(PWC);
+
+          } else if (level_host > pwc_hit_level) {
+            // if not found in the PWC, then make a memory req
+            make_request(page_walk_res, 
+                         TRACE_TYPE[level_host], 
+                         *(it->second.all[level_host]), 
+                         virtual_full_page_addr, 
+                         level_host, 
+                         core); 
+          }
+        }
+
+        // Update range range statistics
+        if (range_found) {
+          page_walk_res.push_back(RANGE_HIT);
+            num_range_found++;
+        } else {
+          page_walk_res.push_back(RANGE_MISS);
+            num_range_not_found++;
+        }
+
+        // Update page walk trajectory statistics
+        hm_full_statistic_t::iterator it = hm_full_statistic.find(page_walk_res);
+        if (it != hm_full_statistic.end()) {
+          it->second++;
+        } else {
+          hm_full_statistic.insert(std::make_pair(page_walk_res, 1));
+        }
+      }
+    } else { //(it != page_table.end()) 
+      num_not_found++;
+      if (knobs.verbose >= 2) {
+        std::cerr << "Error: cannot find translation for " << std::endl
+                  << std::hex 
+                  << "Type " << ((instrs_type == 1) ? "instr" : "data") << std::endl 
+                  << "Vddr " << addr <<  std::endl
+                  << "VAddr >> NUM_PAGE_OFFSET_BITS : " << virtual_page_addr << std::endl
+                  << "VAddr page_addr : " << (virtual_page_addr << NUM_PAGE_OFFSET_BITS) << std::endl
+                  << std::dec
+                  << "VAddr page_offset : " << page_offset << std::endl
+                  << "num_requests : " << num_request << std::endl
+                  << "num_not_found : " << num_not_found <<  std::endl
+                  ;
+      }
+      return true;
+    }
+
+    cache_result_t search_res;
+    if (type_is_instr(new_memref.instr.type) ||
+        new_memref.instr.type == TRACE_TYPE_PREFETCH_INSTR) {
+        if (knobs.verbose >= 2) {
+            std::cerr << "Go to L1I\n";
+        }
         if (knobs.verbose >= 3) {
-            std::cerr << "::" << memref.data.pid << "." << memref.data.tid << ":: "
-                      << " @" << (void *)memref.instr.addr << " instr x"
-                      << memref.instr.size << "\n";
+            std::cerr << "Go to L1I\n";
+            std::cerr << "::" << new_memref.data.pid << "." << new_memref.data.tid << ":: "
+                      << " @" << (void *)new_memref.instr.addr << " instr x"
+                      << new_memref.instr.size << "\n";
         }
-        l1_icaches[core]->request(memref);
-    } else if (memref.data.type == TRACE_TYPE_READ ||
-               memref.data.type == TRACE_TYPE_WRITE ||
+        l1_icaches[core]->request(new_memref);
+    } else if (new_memref.data.type == TRACE_TYPE_READ ||
+               new_memref.data.type == TRACE_TYPE_WRITE ||
                // We may potentially handle prefetches differently.
                // TRACE_TYPE_PREFETCH_INSTR is handled above.
-               type_is_prefetch(memref.data.type)) {
+               type_is_prefetch(new_memref.data.type)) {
+        if (knobs.verbose >= 2) {
+            std::cerr << "Go to L1D\n";
+        }
         if (knobs.verbose >= 3) {
-            std::cerr << "::" << memref.data.pid << "." << memref.data.tid << ":: "
-                      << " @" << (void *)memref.data.pc << " "
-                      << trace_type_names[memref.data.type] << " "
-                      << (void *)memref.data.addr << " x" << memref.data.size << "\n";
+            std::cerr << "::" << new_memref.data.pid << "." << new_memref.data.tid << ":: "
+                      << " @" << (void *)new_memref.data.pc << " "
+                      << trace_type_names[new_memref.data.type] << " "
+                      << (void *)new_memref.data.addr << " x" << new_memref.data.size << "\n";
         }
-        l1_dcaches[core]->request(memref);
-    } else if (memref.flush.type == TRACE_TYPE_INSTR_FLUSH) {
+        search_res = l1_dcaches[core]->request(new_memref);
+    } else if (new_memref.flush.type == TRACE_TYPE_INSTR_FLUSH) {
         if (knobs.verbose >= 3) {
-            std::cerr << "::" << memref.data.pid << "." << memref.data.tid << ":: "
-                      << " @" << (void *)memref.data.pc << " iflush "
-                      << (void *)memref.data.addr << " x" << memref.data.size << "\n";
+            std::cerr << "::" << new_memref.data.pid << "." << new_memref.data.tid << ":: "
+                      << " @" << (void *)new_memref.data.pc << " iflush "
+                      << (void *)new_memref.data.addr << " x" << new_memref.data.size << "\n";
         }
-        l1_icaches[core]->flush(memref);
-    } else if (memref.flush.type == TRACE_TYPE_DATA_FLUSH) {
+        l1_icaches[core]->flush(new_memref);
+    } else if (new_memref.flush.type == TRACE_TYPE_DATA_FLUSH) {
         if (knobs.verbose >= 3) {
-            std::cerr << "::" << memref.data.pid << "." << memref.data.tid << ":: "
-                      << " @" << (void *)memref.data.pc << " dflush "
-                      << (void *)memref.data.addr << " x" << memref.data.size << "\n";
+            std::cerr << "::" << new_memref.data.pid << "." << new_memref.data.tid << ":: "
+                      << " @" << (void *)new_memref.data.pc << " dflush "
+                      << (void *)new_memref.data.addr << " x" << new_memref.data.size << "\n";
         }
-        l1_dcaches[core]->flush(memref);
-    } else if (memref.exit.type == TRACE_TYPE_THREAD_EXIT) {
-        handle_thread_exit(memref.exit.tid);
+        l1_dcaches[core]->flush(new_memref);
+    } else if (new_memref.exit.type == TRACE_TYPE_THREAD_EXIT) {
+        handle_thread_exit(new_memref.exit.tid);
         last_thread = 0;
-    } else if (memref.marker.type == TRACE_TYPE_INSTR_NO_FETCH) {
+    } else if (new_memref.marker.type == TRACE_TYPE_INSTR_NO_FETCH) {
         // Just ignore.
         if (knobs.verbose >= 3) {
-            std::cerr << "::" << memref.data.pid << "." << memref.data.tid << ":: "
-                      << " @" << (void *)memref.instr.addr << " non-fetched instr x"
-                      << memref.instr.size << "\n";
+            std::cerr << "::" << new_memref.data.pid << "." << new_memref.data.tid << ":: "
+                      << " @" << (void *)new_memref.instr.addr << " non-fetched instr x"
+                      << new_memref.instr.size << "\n";
         }
     } else {
-        error_string = "Unhandled memref type " + std::to_string(memref.data.type);
+        std::cout << __FILE__ << " " << __func__ << std::endl;
+        error_string = "Unhandled memref type " + std::to_string(new_memref.data.type);
         return false;
     }
 
+     
+    // Simulate contetnion in caches 
+    // Firstly, simulate conetion in LLC
+    if (op_contention_L1.get_value() != 0) {
+      unsigned int num_req_expected = op_contention_L1.get_value(); //This is an expected number of L1 contention 
+                                                           //requests (multiplied by 100 and roundedd to integer, 
+                                                           //for example, value 560 would correspond to 5.6 requests on
+                                                           //average) 
+      if (num_req_expected >= 100) { //If more than one trashing request expected
+        unsigned int req_count = 0;
+        for(; (req_count+100) <= num_req_expected; req_count+=100) {
+          cache_result_t res = issue_contention_request(l1_dcaches[core], TRACE_TYPE_CONT_L1);
+          if (knobs.verbose >= 2) {
+            std::cerr << "Contention L1: res" << res << std::endl;
+          }
+        }
+        num_req_expected = num_req_expected - req_count;
+      }
+      if (num_req_expected >= 0) {
+        unsigned int draw_a_dice = rand() % 100; //To achieve an expected num_req sent this req probabalistically 
+        if (num_req_expected >= draw_a_dice) {
+          cache_result_t res = issue_contention_request(l1_dcaches[core], TRACE_TYPE_CONT_L1);
+          if (knobs.verbose >= 2) {
+            std::cerr << "Contention L1: res" << res << std::endl;
+          }
+        }
+      }
+    } //end if L1 contention
+
+
+    //Secondly, simulate contention in LLC
+    if ((op_contention_LLC.get_value() != 0) && 
+       ((search_res == FOUND_LLC) || (search_res == NOT_FOUND))) { //Only make a request if LLC was accessed
+      unsigned int num_req_expected = op_contention_L1.get_value(); 
+      if (num_req_expected >= 100) { //If more than one request expected
+        unsigned int req_count = 0;
+        for(; (req_count+100) <= num_req_expected; req_count+=100) {
+          cache_result_t res = issue_contention_request(llc1, TRACE_TYPE_CONT_LLC);
+          if (knobs.verbose >= 2) {
+            std::cerr << "Contention L1: res" << res << std::endl;
+          }
+        }
+        num_req_expected = num_req_expected - req_count;
+      }
+      if (num_req_expected >= 0) {
+        unsigned int draw_a_dice = rand() % 100; //To achieve an expected num_req sent this req probabalistically 
+        if (num_req_expected >= draw_a_dice) {
+          cache_result_t res = issue_contention_request(llc1, TRACE_TYPE_CONT_LLC);
+          if (knobs.verbose >= 2) {
+            std::cerr << "Contention L1: res" << res << std::endl;
+          }
+        }
+      }
+    } //end if LLC contention
+  
+
     // reset cache stats when warming up is completed
     if (!is_warmed_up && check_warmed_up()) {
         for (auto &cache_it : all_caches) {
             cache_t *cache = cache_it.second;
             cache->get_stats()->reset();
         }
-        if (knobs.verbose >= 1) {
+        if (knobs.verbose >= 0) {
             std::cerr << "Cache simulation warmed up\n";
         }
+        //clear the hm_statistic_map
+        hm_full_statistic.clear(); 
     } else {
         knobs.sim_refs--;
     }
@@ -399,6 +781,47 @@ cache_simulator_t::process_memref(const memref_t &memref)
     return true;
 }
 
+void cache_simulator_t::make_request(page_walk_hm_result_t& page_walk_res, 
+                                     trace_type_t type, 
+                                     long long unsigned int base_addr, //phys addr of beginning of a PT page
+                                     long long unsigned int addr_to_find, 
+                                     int level, //PT level
+                                     int core)
+{
+  if (knobs.verbose >= 2) {
+    std::cerr << "Start walk Type: " << type 
+    << " Level: " << level 
+    << std::hex
+    << " BaseAddr: " << base_addr 
+    << " addr_to_find: " << addr_to_find 
+    << std::dec
+    << std::endl;
+  }
+  memref_t page_walk_memref; 
+
+  page_walk_memref.data.type = type;
+  int offset_in_pt_page = ( 
+                            ( addr_to_find >> (NUM_PAGE_OFFSET_BITS + ( (NUM_PAGE_TABLE_LEVELS - level) * NUM_PAGE_INDEX_BITS ))) 
+                            & ((1 << NUM_PAGE_INDEX_BITS) - 1) 
+                          );
+  page_walk_memref.data.addr = base_addr + PAGE_TABLE_ENTRY_SIZE * offset_in_pt_page;
+                             
+  page_walk_memref.data.size = 1; 
+  page_walk_res.push_back(l1_dcaches[core]->request(page_walk_memref));
+  if (knobs.verbose >= 2) {
+    std::cerr << "Done walk Type: " << type 
+    << " Level: " << level 
+    << std::hex
+    << " BaseAddr: " << base_addr 
+    << " addr_to_find: " << addr_to_find 
+    << " offset in cur page: " << offset_in_pt_page
+    << " final addr : " << page_walk_memref.data.addr
+    << std::dec
+    << std::endl;
+  }
+  return;
+}
+
 // Return true if the number of warmup references have been executed or if
 // specified fraction of the llcaches has been loaded. Also return true if the
 // cache has already been warmed up. When there are multiple last level caches
@@ -443,7 +866,9 @@ cache_simulator_t::check_warmed_up()
 bool
 cache_simulator_t::print_results()
 {
-    std::cerr << "Cache simulation results:\n";
+    tlb_sim->print_results();
+    std::cerr << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << std::endl;
+    std::cerr << "Cache simulation results:" << std::endl;
     // Print core and associated L1 cache stats first.
     for (unsigned int i = 0; i < knobs.num_cores; i++) {
         print_core(i);
@@ -453,13 +878,14 @@ cache_simulator_t::print_results()
                 l1_icaches[i]->get_stats()->print_stats("    ");
                 std::cerr << "  L1D stats:" << std::endl;
                 l1_dcaches[i]->get_stats()->print_stats("    ");
+                std::cerr << "  L2 stats:" << std::endl;
+                l2_caches[i]->get_stats()->print_stats("    ");
             } else {
                 std::cerr << "  unified L1 stats:" << std::endl;
                 l1_icaches[i]->get_stats()->print_stats("    ");
             }
         }
     }
-
     // Print non-L1, non-LLC cache stats.
     for (auto &caches_it : other_caches) {
         std::cerr << caches_it.first << " stats:" << std::endl;
@@ -471,6 +897,36 @@ cache_simulator_t::print_results()
         std::cerr << caches_it.first << " stats:" << std::endl;
         caches_it.second->get_stats()->print_stats("    ");
     }
+    std::cerr << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << std::endl;
+    std::cerr << "num_requests : " << num_request << std::endl 
+              << "num_not_found : " << num_not_found << std::endl;
+
+    std::cerr << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << std::endl;
+    std::cerr << "num_range_found : "     << num_range_found << std::endl 
+              << "num_range_not_found : " << num_range_not_found << std::endl;
+    std::cerr << "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" << std::endl;
+
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wwrite-strings" 
+    char *print_hm_stats[] =
+    {
+        "MEMORY"
+        , "L1"
+        , "L2"
+        , "LLC"
+        , "WRONG"
+        , "RANGE_HIT"
+        , "RANGE_MISS"
+        , "PWC"
+        , "ZERO"
+    };
+#pragma GCC diagnostic pop 
+    for (hm_full_statistic_t::iterator it = hm_full_statistic.begin(); it != hm_full_statistic.end(); it++) {
+      for(unsigned int i = 0; i < it->first.size(); i++) {
+        std::cerr << print_hm_stats[it->first[i]] << ",";
+      }
+      std::cerr << "\t" << it->second << std::endl;
+    }
 
     return true;
 }
diff --git a/clients/drcachesim/simulator/cache_simulator.h b/clients/drcachesim/simulator/cache_simulator.h
index 06005ec5..328c95e3 100644
--- a/clients/drcachesim/simulator/cache_simulator.h
+++ b/clients/drcachesim/simulator/cache_simulator.h
@@ -41,21 +41,30 @@
 #include "cache_simulator_create.h"
 #include "cache_stats.h"
 #include "cache.h"
+#include <map>
+#include <unordered_map>
+
+#include "tlb_simulator.h"
+
+#include <stdio.h>
+#include <assert.h>
 
 class cache_simulator_t : public simulator_t {
 public:
     // This constructor is used when the cache hierarchy is configured
     // using a set of knobs. It assumes a 2-level cache hierarchy with
     // private L1 data and instruction caches and a shared LLC.
-    cache_simulator_t(const cache_simulator_knobs_t &knobs);
+    cache_simulator_t(const cache_simulator_knobs_t &knobs, const tlb_simulator_knobs_t &tlb_knobs);
 
     // This constructor is used when the arbitrary cache hierarchy is
     // defined in a configuration file.
     cache_simulator_t(const std::string &config_file);
 
     virtual ~cache_simulator_t();
+
     virtual bool
     process_memref(const memref_t &memref);
+
     virtual bool
     print_results();
 
@@ -76,6 +85,77 @@ protected:
     // This is useful for implementing polymorphism correctly.
     cache_t **l1_icaches;
     cache_t **l1_dcaches;
+    cache_t **l2_caches;
+    cache_t  *llc1;
+    cache_t **pw_caches;
+
+    //TLB(s)
+    tlb_simulator_t *tlb_sim;
+
+    struct page_table_info_t {
+      long long unsigned int VA;
+      long long unsigned int PE1;
+      long long unsigned int PE2;
+      long long unsigned int PE3;
+      long long unsigned int PE4;
+      long long unsigned int PA;
+
+      std::vector<long long unsigned int *> all;
+
+      page_table_info_t() {
+        this->PE1 = 0;
+        this->PE2 = 0;
+        this->PE3 = 0;
+        this->PE4 = 0;
+
+        this->all.resize(5);
+        this->all[1] = &(this->PE1);
+        this->all[2] = &(this->PE2);
+        this->all[3] = &(this->PE3);
+        this->all[4] = &(this->PE4);
+        this->all[0] = &(this->PA );
+
+        assert( *(this->all[2]) == this->PE2);
+      }
+
+      page_table_info_t(const page_table_info_t &obj) {
+        this->PE1 = obj.PE1;
+        this->PE2 = obj.PE2;
+        this->PE3 = obj.PE3;
+        this->PE4 = obj.PE4;
+        this->PA  = obj.PA;
+
+        this->all.resize(5);
+        this->all[1] = &(this->PE1);
+        this->all[2] = &(this->PE2);
+        this->all[3] = &(this->PE3);
+        this->all[4] = &(this->PE4);
+        this->all[0] = &(this->PA );
+
+        assert( *(this->all[2]) == this->PE2);
+      }
+
+    };
+      
+    //Add page table and statistics for it
+    typedef std::unordered_map<long long unsigned int, page_table_info_t> page_table_t;
+    page_table_t page_table;
+    std::vector<uint64_t> hit_statistics;
+    std::vector<uint64_t> miss_statistics;
+
+    struct range_info_t {
+      long long unsigned int l_bound;
+      long long unsigned int h_bound;
+    };
+    typedef std::vector<range_info_t> range_table_t;
+    range_table_t range_table;
+  
+    typedef std::vector<cache_result_t> page_walk_hm_result_t;
+    typedef std::map< page_walk_hm_result_t, uint64_t> hm_full_statistic_t;
+    hm_full_statistic_t hm_full_statistic;
+    page_walk_hm_result_t page_walk_res;
+
+    void make_request(page_walk_hm_result_t& page_walk_res, trace_type_t type, long long unsigned int base_addr, long long unsigned int addr_to_find, int level, int core);
 
     // The following unordered maps map a cache's name to a pointer to it.
     std::unordered_map<std::string, cache_t *> llcaches;     // LLC(s)
diff --git a/clients/drcachesim/simulator/cache_simulator_create.h b/clients/drcachesim/simulator/cache_simulator_create.h
index 1dd98f4e..8240b6c9 100644
--- a/clients/drcachesim/simulator/cache_simulator_create.h
+++ b/clients/drcachesim/simulator/cache_simulator_create.h
@@ -37,6 +37,7 @@
 
 #include <string>
 #include "analysis_tool.h"
+#include "tlb_simulator_create.h"
 
 /**
  * @file drmemtrace/cache_simulator_create.h
@@ -56,7 +57,9 @@ struct cache_simulator_knobs_t {
         , L1D_size(32 * 1024U)
         , L1I_assoc(8)
         , L1D_assoc(8)
-        , LL_size(8 * 1024 * 1024)
+        , L2_size(256 * 1024)
+        , L2_assoc(8)
+        , LL_size(16 * 1024 * 1024)
         , LL_assoc(16)
         , LL_miss_file("")
         , replace_policy("LRU")
@@ -67,6 +70,11 @@ struct cache_simulator_knobs_t {
         , sim_refs(1ULL << 63)
         , cpu_scheduling(false)
         , verbose(0)
+        , pt_dump_filename("")
+        , pt_ranges_file("")
+        , num_ranges(16)
+        , contention_L1(0)
+        , contention_LLC(0)
     {
     }
     unsigned int num_cores;
@@ -75,6 +83,8 @@ struct cache_simulator_knobs_t {
     uint64_t L1D_size;
     unsigned int L1I_assoc;
     unsigned int L1D_assoc;
+    uint64_t L2_size;
+    unsigned int L2_assoc;
     uint64_t LL_size;
     unsigned int LL_assoc;
     std::string LL_miss_file;
@@ -86,11 +96,16 @@ struct cache_simulator_knobs_t {
     uint64_t sim_refs;
     bool cpu_scheduling;
     unsigned int verbose;
+    std::string pt_dump_filename;
+    std::string pt_ranges_file;
+    unsigned int num_ranges;
+    unsigned int contention_L1;
+    unsigned int contention_LLC;
 };
 
-/** Creates an instance of a cache simulator with a 2-level hierarchy. */
+/** Creates an instance of a cache simulator with a 3-level hierarchy and TLBs. */
 analysis_tool_t *
-cache_simulator_create(const cache_simulator_knobs_t &knobs);
+cache_simulator_create(const cache_simulator_knobs_t &knobs, const tlb_simulator_knobs_t &tlb_knobs);
 
 /**
  * Creates an instance of a cache simulator using a cache hierarchy defined
diff --git a/clients/drcachesim/simulator/caching_device.cpp b/clients/drcachesim/simulator/caching_device.cpp
index 1643a7bd..7f60dc25 100644
--- a/clients/drcachesim/simulator/caching_device.cpp
+++ b/clients/drcachesim/simulator/caching_device.cpp
@@ -37,6 +37,17 @@
 #include "../common/utils.h"
 #include <assert.h>
 
+#include <iostream>
+
+
+cache_result_t got_from_parent(cache_result_t cur) {
+  if (cur != NOT_FOUND) {
+    cur = static_cast<cache_result_t>(static_cast<int>(cur) + 1);
+  }
+  return cur;
+}
+
+
 caching_device_t::caching_device_t()
     : blocks(NULL)
     , stats(NULL)
@@ -54,52 +65,12 @@ caching_device_t::~caching_device_t()
     delete[] blocks;
 }
 
-bool
-caching_device_t::init(int associativity_, int block_size_, int num_blocks_,
-                       caching_device_t *parent_, caching_device_stats_t *stats_,
-                       prefetcher_t *prefetcher_, bool inclusive_,
-                       const std::vector<caching_device_t *> &children_)
-{
-    if (!IS_POWER_OF_2(associativity_) || !IS_POWER_OF_2(block_size_) ||
-        !IS_POWER_OF_2(num_blocks_) ||
-        // Assuming caching device block size is at least 4 bytes
-        block_size_ < 4)
-        return false;
-    if (stats_ == NULL)
-        return false; // A stats must be provided for perf: avoid conditional code
-    else if (!*stats_)
-        return false;
-    associativity = associativity_;
-    block_size = block_size_;
-    num_blocks = num_blocks_;
-    loaded_blocks = 0;
-    blocks_per_set = num_blocks / associativity;
-    assoc_bits = compute_log2(associativity);
-    block_size_bits = compute_log2(block_size);
-    blocks_per_set_mask = blocks_per_set - 1;
-    if (assoc_bits == -1 || block_size_bits == -1 || !IS_POWER_OF_2(blocks_per_set))
-        return false;
-    parent = parent_;
-    stats = stats_;
-    prefetcher = prefetcher_;
-
-    blocks = new caching_device_block_t *[num_blocks];
-    init_blocks();
-
-    last_tag = TAG_INVALID; // sentinel
-
-    inclusive = inclusive_;
-    children = children_;
-
-    return true;
-}
-
-void
-caching_device_t::request(const memref_t &memref_in)
-{
+cache_result_t
+caching_device_t::request(const memref_t &memref_in) {
     // Unfortunately we need to make a copy for our loop so we can pass
     // the right data struct to the parent and stats collectors.
     memref_t memref;
+    // std::cerr << "Received addr: " << std::hex << memref_in.data.addr << std::dec << std::endl; 
     // We support larger sizes to improve the IPC perf.
     // This means that one memref could touch multiple blocks.
     // We treat each block separately for statistics purposes.
@@ -107,6 +78,8 @@ caching_device_t::request(const memref_t &memref_in)
     addr_t final_tag = compute_tag(final_addr);
     addr_t tag = compute_tag(memref_in.data.addr);
 
+    cache_result_t res = NOT_FOUND;
+
     // Optimization: check last tag if single-block
     if (tag == final_tag && tag == last_tag) {
         // Make sure last_tag is properly in sync.
@@ -116,7 +89,7 @@ caching_device_t::request(const memref_t &memref_in)
         if (parent != NULL)
             parent->stats->child_access(memref_in, true);
         access_update(last_block_idx, last_way);
-        return;
+        return res;
     }
 
     memref = memref_in;
@@ -131,19 +104,20 @@ caching_device_t::request(const memref_t &memref_in)
         for (way = 0; way < associativity; ++way) {
             if (get_caching_device_block(block_idx, way).tag == tag) {
                 stats->access(memref, true /*hit*/);
+                res = FOUND_L1;
                 if (parent != NULL)
                     parent->stats->child_access(memref, true);
                 break;
             }
         }
-
         if (way == associativity) {
             stats->access(memref, false /*miss*/);
             missed = true;
             // If no parent we assume we get the data from main memory
             if (parent != NULL) {
                 parent->stats->child_access(memref, false);
-                parent->request(memref);
+                res = parent->request(memref);
+                res = got_from_parent(res);
             }
 
             // FIXME i#1726: coherence policy
@@ -179,8 +153,52 @@ caching_device_t::request(const memref_t &memref_in)
         last_way = way;
         last_block_idx = block_idx;
     }
+    return res;
+}
+
+bool
+caching_device_t::init(int associativity_, int block_size_, int num_blocks_,
+                       caching_device_t *parent_, caching_device_stats_t *stats_,
+                       prefetcher_t *prefetcher_, bool inclusive_,
+                       const std::vector<caching_device_t *> &children_)
+{
+    //if (!IS_POWER_OF_2(associativity_) || !IS_POWER_OF_2(block_size_) ||
+    //    !IS_POWER_OF_2(num_blocks_) ||
+    //    // Assuming caching device block size is at least 4 bytes
+    //    block_size_ < 4)
+    //    return false;
+    // std::cerr << associativity_ << " " << num_blocks_;
+    if (stats_ == NULL)
+        return false; // A stats must be provided for perf: avoid conditional code
+    else if (!*stats_)
+        return false;
+    associativity = associativity_;
+    block_size = block_size_;
+    num_blocks = num_blocks_;
+    loaded_blocks = 0;
+    blocks_per_set = num_blocks / associativity;
+    assoc_bits = compute_log2(associativity);
+    block_size_bits = compute_log2(block_size);
+    blocks_per_set_mask = blocks_per_set - 1;
+    //if (assoc_bits == -1 || block_size_bits == -1 || !IS_POWER_OF_2(blocks_per_set))
+    if (block_size_bits == -1 || !IS_POWER_OF_2(blocks_per_set))
+        return false;
+    parent = parent_;
+    stats = stats_;
+    prefetcher = prefetcher_;
+
+    blocks = new caching_device_block_t *[num_blocks];
+    init_blocks();
+
+    last_tag = TAG_INVALID; // sentinel
+
+    inclusive = inclusive_;
+    children = children_;
+
+    return true;
 }
 
+
 void
 caching_device_t::access_update(int block_idx, int way)
 {
@@ -236,3 +254,4 @@ caching_device_t::invalidate(const addr_t tag)
         }
     }
 }
+
diff --git a/clients/drcachesim/simulator/caching_device.h b/clients/drcachesim/simulator/caching_device.h
index 36f82bba..ee9de9da 100644
--- a/clients/drcachesim/simulator/caching_device.h
+++ b/clients/drcachesim/simulator/caching_device.h
@@ -59,8 +59,10 @@ public:
          caching_device_stats_t *stats, prefetcher_t *prefetcher = nullptr,
          bool inclusive = false, const std::vector<caching_device_t *> &children = {});
     virtual ~caching_device_t();
-    virtual void
+
+    virtual cache_result_t
     request(const memref_t &memref);
+
     virtual void
     invalidate(const addr_t tag);
 
@@ -90,6 +92,7 @@ public:
         return double(loaded_blocks) / num_blocks;
     }
 
+
 protected:
     virtual void
     access_update(int block_idx, int way);
@@ -104,7 +107,8 @@ protected:
     inline int
     compute_block_idx(addr_t tag)
     {
-        return (tag & blocks_per_set_mask) << assoc_bits;
+        //return (tag & blocks_per_set_mask) << assoc_bits;
+        return (tag & blocks_per_set_mask) * associativity;
     }
     inline caching_device_block_t &
     get_caching_device_block(int block_idx, int way)
diff --git a/clients/drcachesim/simulator/caching_device_stats.cpp b/clients/drcachesim/simulator/caching_device_stats.cpp
index c87f34cd..5feff41f 100644
--- a/clients/drcachesim/simulator/caching_device_stats.cpp
+++ b/clients/drcachesim/simulator/caching_device_stats.cpp
@@ -30,6 +30,8 @@
  * DAMAGE.
  */
 
+#define PAGE_WALK_STAGES 4
+
 #include <assert.h>
 #include <iostream>
 #include <iomanip>
@@ -48,6 +50,9 @@ caching_device_stats_t::caching_device_stats_t(const std::string &miss_file,
     , warmup_enabled(warmup_enabled)
     , file(nullptr)
 {
+    hit_statistics.resize (PAGE_WALK_STAGES + 2 /* for contention */, 0);
+    miss_statistics.resize(PAGE_WALK_STAGES + 2 /* for contention */, 0);
+
     if (miss_file.empty()) {
         dump_misses = false;
     } else {
@@ -78,12 +83,68 @@ caching_device_stats_t::~caching_device_stats_t()
 void
 caching_device_stats_t::access(const memref_t &memref, bool hit)
 {
+//    std::err << "Received " << hit << std::endl;
     // We assume we're single-threaded.
     // We're only computing miss rate so we just inc counters here.
-    if (hit)
+    if (hit) {
+        if (memref.data.type == TRACE_TYPE_CONT_L1) {
+          hit_statistics[4]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_CONT_LLC) {
+          hit_statistics[5]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE1) {
+          hit_statistics[0]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE2) {
+          hit_statistics[1]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE3) {
+          hit_statistics[2]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE4) {
+          hit_statistics[3]++;
+          return;
+        } 
         num_hits++;
+    }
     else {
+        if (memref.data.type == TRACE_TYPE_CONT_L1) {
+          miss_statistics[4]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_CONT_LLC) {
+          miss_statistics[5]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE1) {
+          miss_statistics[0]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE2) {
+          miss_statistics[1]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE3) {
+          miss_statistics[2]++;
+          return;
+        } 
+        if (memref.data.type == TRACE_TYPE_PE4) {
+          miss_statistics[3]++;
+          return;
+        } 
         num_misses++;
+        //static unsigned int count = 0;
+        //count++;
+        //if ((count >> 15) > 0) {
+        //   count = 0;        
+        //   std::cerr << "Received miss " << num_misses << std::endl;
+        //}
         if (dump_misses)
             dump_miss(memref);
     }
@@ -135,6 +196,14 @@ caching_device_stats_t::print_counts(std::string prefix)
               << std::right << num_misses << std::endl;
     std::cerr << prefix << std::setw(18) << std::left << "Invalidations:" << std::setw(20)
               << std::right << num_inclusive_invalidates << std::endl;
+
+    for (uint i = 0; i < PAGE_WALK_STAGES + 2; i++) {
+      std::cerr << prefix << std::setw(18) << std::left << "Hits PT level" << (i+1) << ":" << std::setw(20)
+                << std::right << hit_statistics[i] << std::endl;
+
+      std::cerr << prefix << std::setw(18) << std::left << "Misses PT level" << (i+1) << ":" << std::setw(20)
+                << std::right << miss_statistics[i] << std::endl;
+    }
 }
 
 void
@@ -189,6 +258,11 @@ caching_device_stats_t::reset()
     num_misses = 0;
     num_child_hits = 0;
     num_inclusive_invalidates = 0;
+
+    for (uint i = 0; i < PAGE_WALK_STAGES; i++) {
+      hit_statistics[i]  = 0;
+      miss_statistics[i] = 0;
+    }
 }
 
 void
diff --git a/clients/drcachesim/simulator/caching_device_stats.h b/clients/drcachesim/simulator/caching_device_stats.h
index da3b4452..1b5c6a87 100644
--- a/clients/drcachesim/simulator/caching_device_stats.h
+++ b/clients/drcachesim/simulator/caching_device_stats.h
@@ -36,6 +36,8 @@
 #ifndef _CACHING_DEVICE_STATS_H_
 #define _CACHING_DEVICE_STATS_H_ 1
 
+#include <vector>
+
 #include <string>
 #include <stdint.h>
 #ifdef HAS_ZLIB
@@ -90,6 +92,9 @@ protected:
     virtual void
     dump_miss(const memref_t &memref);
 
+    std::vector<int_least64_t> hit_statistics;
+    std::vector<int_least64_t> miss_statistics;
+
     int_least64_t num_hits;
     int_least64_t num_misses;
     int_least64_t num_child_hits;
diff --git a/clients/drcachesim/simulator/cmd b/clients/drcachesim/simulator/cmd
new file mode 100644
index 00000000..d0ede9c3
--- /dev/null
+++ b/clients/drcachesim/simulator/cmd
@@ -0,0 +1 @@
+sed -i "1i $(wc -l converted_page_dump | awk '{print $1}')" converted_page_dump
diff --git a/clients/drcachesim/simulator/simulator.h b/clients/drcachesim/simulator/simulator.h
index b71f323f..e3328a38 100644
--- a/clients/drcachesim/simulator/simulator.h
+++ b/clients/drcachesim/simulator/simulator.h
@@ -52,6 +52,7 @@ public:
                 double warmup_fraction, uint64_t sim_refs, bool cpu_scheduling,
                 unsigned int verbose);
     virtual ~simulator_t() = 0;
+
     virtual bool
     process_memref(const memref_t &memref);
 
diff --git a/clients/drcachesim/simulator/tlb.cpp b/clients/drcachesim/simulator/tlb.cpp
index 43b8483d..f6a71b55 100644
--- a/clients/drcachesim/simulator/tlb.cpp
+++ b/clients/drcachesim/simulator/tlb.cpp
@@ -33,16 +33,19 @@
 #include "tlb.h"
 #include "../common/utils.h"
 #include <assert.h>
+#include <iostream>
+
 
 void
 tlb_t::init_blocks()
 {
+    std::cerr << "Initialising a TLB with size: " << num_blocks << std::endl;
     for (int i = 0; i < num_blocks; i++) {
         blocks[i] = new tlb_entry_t;
     }
 }
 
-void
+cache_result_t
 tlb_t::request(const memref_t &memref_in)
 {
     // XXX: any better way to derive caching_device_t::request?
@@ -73,9 +76,11 @@ tlb_t::request(const memref_t &memref_in)
         if (parent != NULL)
             parent->get_stats()->child_access(memref_in, true);
         access_update(last_block_idx, last_way);
-        return;
+        //std::cerr << "TLB hit short" << std::endl; 
+        return FOUND_L1; //found
     }
 
+    cache_result_t prepare_to_return = NOT_FOUND;
     memref = memref_in;
     for (; tag <= final_tag; ++tag) {
         int way;
@@ -90,6 +95,8 @@ tlb_t::request(const memref_t &memref_in)
                 stats->access(memref, true /*hit*/);
                 if (parent != NULL)
                     parent->get_stats()->child_access(memref, true);
+                //std::cerr << "TLB hit by search" << std::endl; 
+                prepare_to_return = FOUND_L1; //found
                 break;
             }
         }
@@ -97,11 +104,12 @@ tlb_t::request(const memref_t &memref_in)
         if (way == associativity) {
             stats->access(memref, false /*miss*/);
             // If no parent we assume we get the data from main memory
+            cache_result_t result = NOT_FOUND;
             if (parent != NULL) {
-                parent->get_stats()->child_access(memref, false);
-                parent->request(memref);
+                parent->get_stats()->child_access(memref, false /*miss*/);
+                result = parent->request(memref);
+                prepare_to_return = result;
             }
-
             // XXX: do we need to handle TLB coherency?
 
             way = replace_which_way(block_idx);
@@ -121,5 +129,10 @@ tlb_t::request(const memref_t &memref_in)
         last_way = way;
         last_block_idx = block_idx;
         last_pid = pid;
+
+        //std::cerr << "TLB return result after search " << prepare_to_return << std::endl; 
+        return prepare_to_return;
     }
+    //std::cerr << "TLB return result after search " << prepare_to_return << std::endl; 
+    return prepare_to_return;
 }
diff --git a/clients/drcachesim/simulator/tlb.h b/clients/drcachesim/simulator/tlb.h
index 99bb265c..34a1dcde 100644
--- a/clients/drcachesim/simulator/tlb.h
+++ b/clients/drcachesim/simulator/tlb.h
@@ -40,9 +40,11 @@
 #include "tlb_entry.h"
 #include "tlb_stats.h"
 
+#include "caching_device.h"
+
 class tlb_t : public caching_device_t {
 public:
-    virtual void
+    virtual cache_result_t
     request(const memref_t &memref);
 
 protected:
diff --git a/clients/drcachesim/simulator/tlb_simulator.cpp b/clients/drcachesim/simulator/tlb_simulator.cpp
index 870ca18f..6030d125 100644
--- a/clients/drcachesim/simulator/tlb_simulator.cpp
+++ b/clients/drcachesim/simulator/tlb_simulator.cpp
@@ -44,6 +44,8 @@
 #include "tlb.h"
 #include "tlb_simulator.h"
 
+#include <utility> //for process_mem
+
 analysis_tool_t *
 tlb_simulator_create(const tlb_simulator_knobs_t &knobs)
 {
@@ -121,26 +123,39 @@ tlb_simulator_t::~tlb_simulator_t()
 }
 
 bool
-tlb_simulator_t::process_memref(const memref_t &memref)
+tlb_simulator_t::process_memref(const memref_t &memref) {
+  assert(0); //should not be called 
+}
+
+// Returns 
+// first:  done or not
+// second: hit/miss
+std::pair<bool, bool>
+tlb_simulator_t::process_memref_tlb(const memref_t &memref)
 {
     if (knobs.skip_refs > 0) {
         knobs.skip_refs--;
-        return true;
+        std::cerr << "Warning: skip_refs " << memref.data.addr << "...";
+        return std::pair<bool, bool>(true, true);
     }
 
     // The references after warmup and simulated ones are dropped.
-    if (knobs.warmup_refs == 0 && knobs.sim_refs == 0)
-        return true;
+    if (knobs.warmup_refs == 0 && knobs.sim_refs == 0) {
+        std::cerr << "Warning: warmup+skiprefs " << memref.data.addr << "...";
+        return std::pair<bool, bool>(true, true);
+    }
 
     // Both warmup and simulated references are simulated.
-
-    if (!simulator_t::process_memref(memref))
-        return false;
+    if (!simulator_t::process_memref(memref)) {
+        std::cerr << "Warning: untrue " << memref.data.addr << "...";
+        return std::pair<bool, bool>(true, true);
+    }
 
     if (memref.marker.type == TRACE_TYPE_MARKER) {
-        // We ignore markers before we ask core_for_thread, to avoid asking
-        // too early on a timestamp marker.
-        return true;
+      // We ignore markers before we ask core_for_thread, to avoid asking
+      // too early on a timestamp marker.
+        std::cerr << __FUNCTION__ << "memref.marker.type == TRACE_TYPE_MARKER" << memref.data.addr << "...";
+        return std::pair<bool, bool>(true, true);
     }
 
     // We use a static scheduling of threads to cores, as it is
@@ -155,10 +170,23 @@ tlb_simulator_t::process_memref(const memref_t &memref)
         last_core = core;
     }
 
-    if (type_is_instr(memref.instr.type))
-        itlbs[core]->request(memref);
-    else if (memref.data.type == TRACE_TYPE_READ || memref.data.type == TRACE_TYPE_WRITE)
-        dtlbs[core]->request(memref);
+    bool found = false;
+
+    if (type_is_instr(memref.instr.type)) {
+        //Debug
+        //std::cerr << "Checking ITLB for addr " << std::hex << memref.instr.addr << std::dec << "...";
+        found = (itlbs[core]->request(memref) != NOT_FOUND);
+        if (knobs.verbose >= 2) {
+          std::cerr << "found in ITLB: " << found << std::endl;
+        }
+    }
+    else if (memref.data.type == TRACE_TYPE_READ || memref.data.type == TRACE_TYPE_WRITE) {
+        //std::cerr << "Checking DTLB for addr " << std::hex << memref.data.addr << std::dec << "...";
+        found = (dtlbs[core]->request(memref) != NOT_FOUND);
+        if (knobs.verbose >= 2) {
+          std::cerr << "found in DTLB: " << found << std::endl;
+        }
+    }
     else if (memref.exit.type == TRACE_TYPE_THREAD_EXIT) {
         handle_thread_exit(memref.exit.tid);
         last_thread = 0;
@@ -169,8 +197,9 @@ tlb_simulator_t::process_memref(const memref_t &memref)
                memref.marker.type == TRACE_TYPE_INSTR_NO_FETCH) {
         // TLB simulator ignores prefetching, cache flushing, and markers
     } else {
+        std::cout << __func__ << std::endl;
         error_string = "Unhandled memref type " + std::to_string(memref.data.type);
-        return false;
+        return std::pair<bool, bool>(false, true);
     }
 
     if (knobs.verbose >= 3) {
@@ -186,6 +215,7 @@ tlb_simulator_t::process_memref(const memref_t &memref)
         // reset tlb stats when warming up is completed
         if (knobs.warmup_refs == 0) {
             for (unsigned int i = 0; i < knobs.num_cores; i++) {
+                std::cerr << "Finished warmup of TLB" << std::endl;
                 itlbs[i]->get_stats()->reset();
                 dtlbs[i]->get_stats()->reset();
                 lltlbs[i]->get_stats()->reset();
@@ -194,7 +224,7 @@ tlb_simulator_t::process_memref(const memref_t &memref)
     } else {
         knobs.sim_refs--;
     }
-    return true;
+    return std::pair<bool, bool>(true, found);
 }
 
 bool
@@ -204,11 +234,11 @@ tlb_simulator_t::print_results()
     for (unsigned int i = 0; i < knobs.num_cores; i++) {
         print_core(i);
         if (thread_ever_counts[i] > 0) {
-            std::cerr << "  L1I stats:" << std::endl;
+            std::cerr << "  TLB-L1I stats:" << std::endl;
             itlbs[i]->get_stats()->print_stats("    ");
-            std::cerr << "  L1D stats:" << std::endl;
+            std::cerr << "  TLB-L1D stats:" << std::endl;
             dtlbs[i]->get_stats()->print_stats("    ");
-            std::cerr << "  LL stats:" << std::endl;
+            std::cerr << "  TLB-LL stats:" << std::endl;
             lltlbs[i]->get_stats()->print_stats("    ");
         }
     }
diff --git a/clients/drcachesim/simulator/tlb_simulator.h b/clients/drcachesim/simulator/tlb_simulator.h
index f797b4b5..c92f63dc 100644
--- a/clients/drcachesim/simulator/tlb_simulator.h
+++ b/clients/drcachesim/simulator/tlb_simulator.h
@@ -46,11 +46,16 @@ class tlb_simulator_t : public simulator_t {
 public:
     tlb_simulator_t(const tlb_simulator_knobs_t &knobs);
     virtual ~tlb_simulator_t();
+
     virtual bool
     process_memref(const memref_t &memref);
+
     virtual bool
     print_results();
 
+    std::pair<bool,bool> 
+    process_memref_tlb(const memref_t &memref); 
+
 protected:
     // Create a tlb_t object with a specific replacement policy.
     virtual tlb_t *
diff --git a/install.sh b/install.sh
new file mode 100755
index 00000000..e324b5c3
--- /dev/null
+++ b/install.sh
@@ -0,0 +1,10 @@
+mkdir -p build && pushd build
+# Generate makefiles with CMake.  Pass in the path to your source directory.
+CFLAGS=-g CXXFLAGS=-g cmake -DDEBUG=ON ..
+# Build.
+make -j
+popd
+# Run echo under DR to see if it works.  If you configured for a debug or 32-bit
+# build, your path will be different.  For example, a 32-bit debug build would
+# put drrun in ./bin32/ and need -debug flag to run debug build.
+#../bin64/drrun -- echo "hello world"
diff --git a/install.sh.bak b/install.sh.bak
new file mode 100755
index 00000000..83bfe70d
--- /dev/null
+++ b/install.sh.bak
@@ -0,0 +1,10 @@
+mkdir -p build && pushd build
+# Generate makefiles with CMake.  Pass in the path to your source directory.
+cmake ..
+# Build.
+make -j
+popd
+# Run echo under DR to see if it works.  If you configured for a debug or 32-bit
+# build, your path will be different.  For example, a 32-bit debug build would
+# put drrun in ./bin32/ and need -debug flag to run debug build.
+#../bin64/drrun -- echo "hello world"
diff --git a/install_debug.sh b/install_debug.sh
new file mode 100755
index 00000000..f14ca4c0
--- /dev/null
+++ b/install_debug.sh
@@ -0,0 +1,10 @@
+mkdir -p debug && pushd debug
+# Generate makefiles with CMake.  Pass in the path to your source directory.
+CFLAGS=-g CXXFLAGS=-g cmake -DDEBUG=ON ..
+# Build.
+make -j
+popd
+# Run echo under DR to see if it works.  If you configured for a debug or 32-bit
+# build, your path will be different.  For example, a 32-bit debug build would
+# put drrun in ./bin32/ and need -debug flag to run debug build.
+#../bin64/drrun -- echo "hello world"
diff --git a/source.sh b/source.sh
new file mode 100755
index 00000000..28bedfbd
--- /dev/null
+++ b/source.sh
@@ -0,0 +1,5 @@
+export SIMULATOR_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )" 
+alias build_simulator='. $SIMULATOR_DIR/build.sh'
+alias clean_simulator='. $SIMULATOR_DIR/clean.sh'
+alias generate_trace='. $SIMULATOR_DIR/generate_trace.sh'
+function run_simulator() { $SIMULATOR_DIR/build/bin64/drrun "$@"; }
diff --git a/tests/cmd_cactus b/tests/cmd_cactus
new file mode 100644
index 00000000..8095a885
--- /dev/null
+++ b/tests/cmd_cactus
@@ -0,0 +1,24 @@
+TRACE_DIR=/disk/local/traces/cactus/
+TRACE=$(find $TRACE_DIR -maxdepth 1 -name "drmemtrace*" -type d)
+
+$SIMULATOR_DIR/build/bin64/drrun -t drcachesim \
+                    -indir $TRACE \
+                    -pt_dump_file $TRACE_DIR/pt_dump \
+                    -warmup_refs     300000000                   \
+                    -TLB_L1I_entries 64                          \
+                    -TLB_L1I_assoc   8                           \
+                    -TLB_L1D_entries 64                          \
+                    -TLB_L1D_assoc   8                           \
+                    -TLB_L2_entries  1024                        \
+                    -TLB_L1D_assoc   8                           \
+                    -L1I_size  $(( 32 * 1024 ))                  \
+                    -L1I_assoc 8                                 \
+                    -L1D_size  $(( 32 * 1024 ))                  \
+                    -L1D_assoc 8                                 \
+                    -L2_size   $(( 256 * 1024 ))                 \
+                    -L2_assoc  8                                 \
+                    -LL_size   $(( 16 * 1024 * 1024 ))           \
+                    -LL_assoc  16                                \
+                    > cactus.res 2>&1 & pid=$! &
+
+tail -f cactus.res
diff --git a/tests/cmd_mcf b/tests/cmd_mcf
new file mode 100644
index 00000000..6e75e434
--- /dev/null
+++ b/tests/cmd_mcf
@@ -0,0 +1,24 @@
+TRACE_DIR=/disk/local/traces/mcf/
+TRACE=$(find $TRACE_DIR -maxdepth 1 -name "drmemtrace*" -type d)
+
+$SIMULATOR_DIR/build/bin64/drrun -t drcachesim \
+                    -indir $TRACE \
+                    -pt_dump_file $TRACE_DIR/pt_dump \
+                    -warmup_refs     300000000                   \
+                    -TLB_L1I_entries 64                          \
+                    -TLB_L1I_assoc   8                           \
+                    -TLB_L1D_entries 64                          \
+                    -TLB_L1D_assoc   8                           \
+                    -TLB_L2_entries  1024                        \
+                    -TLB_L1D_assoc   8                           \
+                    -L1I_size  $(( 32 * 1024 ))                  \
+                    -L1I_assoc 8                                 \
+                    -L1D_size  $(( 32 * 1024 ))                  \
+                    -L1D_assoc 8                                 \
+                    -L2_size   $(( 256 * 1024 ))                 \
+                    -L2_assoc  8                                 \
+                    -LL_size   $(( 16 * 1024 * 1024 ))           \
+                    -LL_assoc  16                                \
+                    > mcf.res 2>&1 & pid=$! &
+
+tail -f mcf.res
diff --git a/tests/cmd_mcf_short b/tests/cmd_mcf_short
new file mode 100644
index 00000000..88527eef
--- /dev/null
+++ b/tests/cmd_mcf_short
@@ -0,0 +1,25 @@
+TRACE_DIR=/disk/local/traces/mcf_short/
+TRACE=$(find $TRACE_DIR -maxdepth 1 -name "drmemtrace*" -type d)
+
+$SIMULATOR_DIR/build/bin64/drrun -t drcachesim \
+                    -indir $TRACE \
+                    -pt_dump_file $TRACE_DIR/pt_dump \
+                    -warmup_refs     300000                      \
+                    -TLB_L1I_entries 64                          \
+                    -TLB_L1I_assoc   8                           \
+                    -TLB_L1D_entries 64                          \
+                    -TLB_L1D_assoc   8                           \
+                    -TLB_L2_entries  1536                        \
+                    -TLB_L2_assoc   6                            \
+                    -L1I_size  $(( 32 * 1024 ))                  \
+                    -L1I_assoc 8                                 \
+                    -L1D_size  $(( 32 * 1024 ))                  \
+                    -L1D_assoc 8                                 \
+                    -L2_size   $(( 256 * 1024 ))                 \
+                    -L2_assoc  8                                 \
+                    -LL_size   $(( 16 * 1024 * 1024 ))           \
+                    -LL_assoc  16                                \
+                    > mcf.res 2>&1 & pid=$! &
+
+tail -f mcf.res
+                    #-verbose 3 \
diff --git a/tests/mcf.res b/tests/mcf.res
new file mode 100644
index 00000000..3f455516
--- /dev/null
+++ b/tests/mcf.res
@@ -0,0 +1,2407 @@
+8 64Initialising a TLB with size: 64
+8 64Initialising a TLB with size: 64
+6 1536Initialising a TLB with size: 1536
+8 64Initialising a TLB with size: 64
+8 64Initialising a TLB with size: 64
+6 1536Initialising a TLB with size: 1536
+8 64Initialising a TLB with size: 64
+8 64Initialising a TLB with size: 64
+6 1536Initialising a TLB with size: 1536
+8 64Initialising a TLB with size: 64
+8 64Initialising a TLB with size: 64
+6 1536Initialising a TLB with size: 1536
+Initialising PT from file: /disk/local/traces/mcf_short//pt_dump
+Loading page table with 244291 PT entries...
+Loaded 244291 unique PT entries.
+Initialising a cache with size: 16777216 with assoc: 16 with line size: 64
+16 262144Initialising a cache with size: 262144 with assoc: 8 with line size: 64
+8 4096Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Initialising a cache with size: 262144 with assoc: 8 with line size: 64
+8 4096Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Initialising a cache with size: 262144 with assoc: 8 with line size: 64
+8 4096Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Initialising a cache with size: 262144 with assoc: 8 with line size: 64
+8 4096Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Initialising a cache with size: 32768 with assoc: 8 with line size: 64
+8 512Finished warmup of TLB
+Finished warmup of TLB
+Finished warmup of TLB
+Finished warmup of TLB
+Heartbeat. 4194304 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                        2,629,935
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        1,121,623
+    Misses:                        141,871
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       11.23%
+  TLB-LL stats:
+    Hits:                          140,761
+    Misses:                          1,110
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  0.78%
+    Child hits:                  3,751,558
+    Total miss rate:                  0.03%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                        2,791,122
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        1,159,696
+    Misses:                        152,472
+    Invalidations:                       0
+    Hits PT level     1:               1,194
+    Misses PT level   1:                 116
+    Hits PT level     2:               1,208
+    Misses PT level   2:                 102
+    Hits PT level     3:                 693
+    Misses PT level   3:                 617
+    Hits PT level     4:                 581
+    Misses PT level   4:                 729
+    Prefetch hits:                  39,175
+    Prefetch misses:               114,861
+    Miss rate:                       11.62%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                            8,038
+    Misses:                        144,436
+    Invalidations:                       0
+    Hits PT level     1:                  95
+    Misses PT level   1:                  21
+    Hits PT level     2:                  89
+    Misses PT level   2:                  13
+    Hits PT level     3:                 533
+    Misses PT level   3:                  84
+    Hits PT level     4:                 570
+    Misses PT level   4:                 159
+    Prefetch hits:                   5,559
+    Prefetch misses:               109,302
+    Local miss rate:                 94.73%
+    Child hits:                  3,993,669
+    Total miss rate:                  3.48%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                          105,945
+    Misses:                         38,491
+    Invalidations:                       0
+    Hits PT level     1:                  21
+    Misses PT level   1:                   0
+    Hits PT level     2:                  13
+    Misses PT level   2:                   0
+    Hits PT level     3:                  84
+    Misses PT level   3:                   0
+    Hits PT level     4:                 147
+    Misses PT level   4:                  12
+    Prefetch hits:                  73,616
+    Prefetch misses:                35,686
+    Local miss rate:                 26.65%
+    Child hits:                     14,884
+    Total miss rate:                 24.16%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 4194304
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	20
+L1,L1,L1,L1,	700
+L1,L1,L1,L2,	156
+L1,L1,L1,LLC,	24
+L1,L1,L2,L1,	79
+L1,L1,L2,L2,	307
+L1,L1,L2,LLC,	62
+L1,L1,LLC,L1,	6
+L1,L1,LLC,L2,	29
+L1,L1,LLC,LLC,	34
+L1,L2,L1,L1,	4
+L1,L2,L1,L2,	9
+L1,L2,L1,LLC,	2
+L1,L2,L2,L1,	9
+L1,L2,L2,L2,	20
+L1,L2,L2,LLC,	5
+L1,L2,LLC,L2,	3
+L1,L2,LLC,LLC,	2
+L1,LLC,L1,L1,	7
+L1,LLC,L2,L2,	2
+L1,LLC,LLC,L2,	1
+L2,L1,L1,L1,	4
+L2,L1,L1,L2,	8
+L2,L1,L2,L1,	3
+L2,L1,L2,L2,	34
+L2,L1,L2,LLC,	8
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	2
+L2,L1,LLC,LLC,	1
+L2,L2,L1,L1,	1
+L2,L2,L1,L2,	4
+L2,L2,L1,LLC,	3
+L2,L2,L2,L2,	14
+L2,L2,L2,LLC,	4
+L2,L2,LLC,L2,	5
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	2
+LLC,L1,L1,L2,	2
+LLC,L1,L1,LLC,	1
+LLC,L1,L2,L1,	1
+LLC,L1,L2,L2,	6
+LLC,L1,L2,LLC,	2
+LLC,L1,LLC,L2,	1
+LLC,L2,L1,L1,	1
+LLC,L2,L2,L2,	3
+LLC,L2,L2,LLC,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,LLC,	1
+
+
+
+
+Heartbeat. 8388608 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                        5,458,399
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        2,314,280
+    Misses:                        314,178
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       11.95%
+  TLB-LL stats:
+    Hits:                          310,182
+    Misses:                          3,996
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  1.27%
+    Child hits:                  7,772,679
+    Total miss rate:                  0.05%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                        5,679,345
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        2,351,342
+    Misses:                        325,790
+    Invalidations:                       0
+    Hits PT level     1:               4,043
+    Misses PT level   1:                 153
+    Hits PT level     2:               4,048
+    Misses PT level   2:                 148
+    Hits PT level     3:               2,647
+    Misses PT level   3:               1,549
+    Hits PT level     4:               2,390
+    Misses PT level   4:               1,806
+    Prefetch hits:                  85,296
+    Prefetch misses:               244,150
+    Miss rate:                       12.17%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           18,156
+    Misses:                        307,636
+    Invalidations:                       0
+    Hits PT level     1:                 125
+    Misses PT level   1:                  28
+    Hits PT level     2:                 128
+    Misses PT level   2:                  20
+    Hits PT level     3:               1,399
+    Misses PT level   3:                 150
+    Hits PT level     4:               1,378
+    Misses PT level   4:                 428
+    Prefetch hits:                  12,608
+    Prefetch misses:               231,542
+    Local miss rate:                 94.43%
+    Child hits:                  8,129,111
+    Total miss rate:                  3.64%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                          243,973
+    Misses:                         63,663
+    Invalidations:                       0
+    Hits PT level     1:                  28
+    Misses PT level   1:                   0
+    Hits PT level     2:                  20
+    Misses PT level   2:                   0
+    Hits PT level     3:                 150
+    Misses PT level   3:                   0
+    Hits PT level     4:                 413
+    Misses PT level   4:                  15
+    Prefetch hits:                 169,392
+    Prefetch misses:                62,150
+    Local miss rate:                 20.69%
+    Child hits:                     33,794
+    Total miss rate:                 18.65%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 8388608
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	20
+L1,L1,L1,L1,	2320
+L1,L1,L1,L2,	399
+L1,L1,L1,LLC,	87
+L1,L1,L2,MEMORY,	3
+L1,L1,L2,L1,	255
+L1,L1,L2,L2,	797
+L1,L1,L2,LLC,	219
+L1,L1,LLC,L1,	10
+L1,L1,LLC,L2,	58
+L1,L1,LLC,LLC,	60
+L1,L2,L1,L1,	8
+L1,L2,L1,L2,	17
+L1,L2,L1,LLC,	5
+L1,L2,L2,L1,	11
+L1,L2,L2,L2,	29
+L1,L2,L2,LLC,	9
+L1,L2,LLC,L2,	4
+L1,L2,LLC,LLC,	4
+L1,LLC,L1,L1,	8
+L1,LLC,L2,L2,	3
+L1,LLC,L2,LLC,	3
+L1,LLC,LLC,L2,	1
+L2,L1,L1,L1,	4
+L2,L1,L1,L2,	13
+L2,L1,L1,LLC,	1
+L2,L1,L2,L1,	4
+L2,L1,L2,L2,	45
+L2,L1,L2,LLC,	10
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	4
+L2,L1,LLC,LLC,	3
+L2,L2,L1,L1,	1
+L2,L2,L1,L2,	6
+L2,L2,L1,LLC,	4
+L2,L2,L2,L2,	16
+L2,L2,L2,LLC,	4
+L2,L2,LLC,L2,	5
+L2,LLC,L2,L2,	1
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	3
+LLC,L1,L1,L2,	4
+LLC,L1,L1,LLC,	1
+LLC,L1,L2,L1,	1
+LLC,L1,L2,L2,	7
+LLC,L1,L2,LLC,	3
+LLC,L1,LLC,L2,	1
+LLC,L2,L1,L1,	1
+LLC,L2,L2,L2,	3
+LLC,L2,L2,LLC,	2
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	1
+LLC,LLC,L2,LLC,	1
+
+
+
+
+Heartbeat. 12582912 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                        8,299,121
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        3,498,564
+    Misses:                        482,580
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.12%
+  TLB-LL stats:
+    Hits:                          474,996
+    Misses:                          7,584
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  1.57%
+    Child hits:                 11,797,685
+    Total miss rate:                  0.06%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                        8,573,586
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        3,502,238
+    Misses:                        527,580
+    Invalidations:                       0
+    Hits PT level     1:               7,533
+    Misses PT level   1:                 251
+    Hits PT level     2:               7,589
+    Misses PT level   2:                 195
+    Hits PT level     3:               4,912
+    Misses PT level   3:               2,872
+    Hits PT level     4:               4,481
+    Misses PT level   4:               3,303
+    Prefetch hits:                 139,496
+    Prefetch misses:               394,705
+    Miss rate:                       13.09%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           28,980
+    Misses:                        498,602
+    Invalidations:                       0
+    Hits PT level     1:                 209
+    Misses PT level   1:                  42
+    Hits PT level     2:                 169
+    Misses PT level   2:                  26
+    Hits PT level     3:               2,647
+    Misses PT level   3:                 225
+    Hits PT level     4:               2,553
+    Misses PT level   4:                 750
+    Prefetch hits:                  20,974
+    Prefetch misses:               373,731
+    Local miss rate:                 94.51%
+    Child hits:                 12,239,835
+    Total miss rate:                  3.91%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                          404,967
+    Misses:                         93,635
+    Invalidations:                       0
+    Hits PT level     1:                  42
+    Misses PT level   1:                   0
+    Hits PT level     2:                  26
+    Misses PT level   2:                   0
+    Hits PT level     3:                 225
+    Misses PT level   3:                   0
+    Hits PT level     4:                 733
+    Misses PT level   4:                  17
+    Prefetch hits:                 281,044
+    Prefetch misses:                92,687
+    Local miss rate:                 18.78%
+    Child hits:                     55,532
+    Total miss rate:                 16.90%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 12582912
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	20
+L1,L1,L1,L1,	4106
+L1,L1,L1,L2,	755
+L1,L1,L1,LLC,	181
+L1,L1,L2,MEMORY,	5
+L1,L1,L2,L1,	534
+L1,L1,L2,L2,	1512
+L1,L1,L2,LLC,	386
+L1,L1,LLC,L1,	12
+L1,L1,LLC,L2,	91
+L1,L1,LLC,LLC,	91
+L1,L2,L1,L1,	13
+L1,L2,L1,L2,	19
+L1,L2,L1,LLC,	6
+L1,L2,L2,L1,	13
+L1,L2,L2,L2,	36
+L1,L2,L2,LLC,	10
+L1,L2,LLC,L2,	4
+L1,L2,LLC,LLC,	7
+L1,LLC,L1,L1,	8
+L1,LLC,L2,L2,	6
+L1,LLC,L2,LLC,	3
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	13
+L2,L1,L1,L2,	21
+L2,L1,L1,LLC,	2
+L2,L1,L2,L1,	8
+L2,L1,L2,L2,	80
+L2,L1,L2,LLC,	16
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	5
+L2,L1,LLC,LLC,	4
+L2,L2,L1,L1,	1
+L2,L2,L1,L2,	7
+L2,L2,L1,LLC,	4
+L2,L2,L2,L1,	1
+L2,L2,L2,L2,	24
+L2,L2,L2,LLC,	11
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	2
+L2,LLC,L2,L2,	1
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	3
+LLC,L1,L1,L2,	4
+LLC,L1,L1,LLC,	2
+LLC,L1,L2,L1,	3
+LLC,L1,L2,L2,	12
+LLC,L1,L2,LLC,	5
+LLC,L1,LLC,L2,	1
+LLC,L1,LLC,LLC,	1
+LLC,L2,L1,L1,	1
+LLC,L2,L2,L2,	3
+LLC,L2,L2,LLC,	3
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	2
+LLC,LLC,L2,LLC,	1
+
+
+
+
+Heartbeat. 16777216 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       11,132,946
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        4,690,726
+    Misses:                        650,019
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.17%
+  TLB-LL stats:
+    Hits:                          639,068
+    Misses:                         10,951
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  1.68%
+    Child hits:                 15,823,672
+    Total miss rate:                  0.07%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       11,466,865
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        4,690,219
+    Misses:                        699,200
+    Invalidations:                       0
+    Hits PT level     1:              10,868
+    Misses PT level   1:                 283
+    Hits PT level     2:              10,927
+    Misses PT level   2:                 224
+    Hits PT level     3:               7,164
+    Misses PT level   3:               3,987
+    Hits PT level     4:               6,478
+    Misses PT level   4:               4,673
+    Prefetch hits:                 184,597
+    Prefetch misses:               523,770
+    Miss rate:                       12.97%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           38,395
+    Misses:                        660,807
+    Invalidations:                       0
+    Hits PT level     1:                 225
+    Misses PT level   1:                  58
+    Hits PT level     2:                 191
+    Misses PT level   2:                  33
+    Hits PT level     3:               3,677
+    Misses PT level   3:                 310
+    Hits PT level     4:               3,544
+    Misses PT level   4:               1,129
+    Prefetch hits:                  27,677
+    Prefetch misses:               496,093
+    Local miss rate:                 94.51%
+    Child hits:                 16,377,118
+    Total miss rate:                  3.87%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                          539,155
+    Misses:                        121,652
+    Invalidations:                       0
+    Hits PT level     1:                  58
+    Misses PT level   1:                   0
+    Hits PT level     2:                  33
+    Misses PT level   2:                   0
+    Hits PT level     3:                 310
+    Misses PT level   3:                   0
+    Hits PT level     4:               1,107
+    Misses PT level   4:                  22
+    Prefetch hits:                 374,594
+    Prefetch misses:               121,499
+    Local miss rate:                 18.41%
+    Child hits:                     73,709
+    Total miss rate:                 16.56%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 16777216
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	21
+L1,L1,L1,L1,	5823
+L1,L1,L1,L2,	1131
+L1,L1,L1,LLC,	318
+L1,L1,L2,MEMORY,	7
+L1,L1,L2,L1,	790
+L1,L1,L2,L2,	2070
+L1,L1,L2,LLC,	572
+L1,L1,LLC,MEMORY,	2
+L1,L1,LLC,L1,	25
+L1,L1,LLC,L2,	121
+L1,L1,LLC,LLC,	127
+L1,L2,L1,L1,	14
+L1,L2,L1,L2,	20
+L1,L2,L1,LLC,	8
+L1,L2,L2,L1,	14
+L1,L2,L2,L2,	41
+L1,L2,L2,LLC,	13
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	5
+L1,L2,LLC,LLC,	7
+L1,LLC,L1,L1,	8
+L1,LLC,L1,L2,	1
+L1,LLC,L1,LLC,	1
+L1,LLC,L2,L2,	9
+L1,LLC,L2,LLC,	4
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	15
+L2,L1,L1,L2,	25
+L2,L1,L1,LLC,	2
+L2,L1,L2,L1,	8
+L2,L1,L2,L2,	84
+L2,L1,L2,LLC,	17
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	5
+L2,L1,LLC,LLC,	5
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	7
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	2
+L2,L2,L2,L2,	24
+L2,L2,L2,LLC,	12
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	2
+L2,LLC,L2,L2,	1
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	6
+LLC,L1,L1,L2,	5
+LLC,L1,L1,LLC,	3
+LLC,L1,L2,L1,	3
+LLC,L1,L2,L2,	16
+LLC,L1,L2,LLC,	7
+LLC,L1,LLC,L2,	2
+LLC,L1,LLC,LLC,	1
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	1
+LLC,L2,L2,L2,	4
+LLC,L2,L2,LLC,	3
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	2
+LLC,LLC,L2,LLC,	2
+
+
+
+
+Heartbeat. 20971520 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       13,965,228
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        5,884,394
+    Misses:                        817,497
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.20%
+  TLB-LL stats:
+    Hits:                          803,063
+    Misses:                         14,434
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  1.77%
+    Child hits:                 19,849,622
+    Total miss rate:                  0.07%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       14,359,110
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        5,880,176
+    Misses:                        870,389
+    Invalidations:                       0
+    Hits PT level     1:              14,344
+    Misses PT level   1:                 290
+    Hits PT level     2:              14,406
+    Misses PT level   2:                 228
+    Hits PT level     3:               9,600
+    Misses PT level   3:               5,034
+    Hits PT level     4:               8,594
+    Misses PT level   4:               6,040
+    Prefetch hits:                 229,973
+    Prefetch misses:               652,008
+    Miss rate:                       12.89%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           47,894
+    Misses:                        822,497
+    Invalidations:                       0
+    Hits PT level     1:                 226
+    Misses PT level   1:                  64
+    Hits PT level     2:                 193
+    Misses PT level   2:                  35
+    Hits PT level     3:               4,642
+    Misses PT level   3:                 392
+    Hits PT level     4:               4,509
+    Misses PT level   4:               1,531
+    Prefetch hits:                  34,434
+    Prefetch misses:               617,574
+    Local miss rate:                 94.50%
+    Child hits:                 20,516,203
+    Total miss rate:                  3.85%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                          673,379
+    Misses:                        149,118
+    Invalidations:                       0
+    Hits PT level     1:                  64
+    Misses PT level   1:                   0
+    Hits PT level     2:                  35
+    Misses PT level   2:                   0
+    Hits PT level     3:                 392
+    Misses PT level   3:                   0
+    Hits PT level     4:               1,507
+    Misses PT level   4:                  24
+    Prefetch hits:                 467,626
+    Prefetch misses:               149,948
+    Local miss rate:                 18.13%
+    Child hits:                     91,898
+    Total miss rate:                 16.31%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 20971520
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	23
+L1,L1,L1,L1,	7712
+L1,L1,L1,L2,	1527
+L1,L1,L1,LLC,	466
+L1,L1,L2,MEMORY,	7
+L1,L1,L2,L1,	1005
+L1,L1,L2,L2,	2589
+L1,L1,L2,LLC,	795
+L1,L1,LLC,MEMORY,	2
+L1,L1,LLC,L1,	34
+L1,L1,LLC,L2,	166
+L1,L1,LLC,LLC,	154
+L1,L2,L1,L1,	15
+L1,L2,L1,L2,	20
+L1,L2,L1,LLC,	8
+L1,L2,L2,L1,	14
+L1,L2,L2,L2,	42
+L1,L2,L2,LLC,	13
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	5
+L1,L2,LLC,LLC,	7
+L1,LLC,L1,L1,	8
+L1,LLC,L1,L2,	1
+L1,LLC,L1,LLC,	1
+L1,LLC,L2,L2,	10
+L1,LLC,L2,LLC,	4
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	15
+L2,L1,L1,L2,	25
+L2,L1,L1,LLC,	2
+L2,L1,L2,L1,	8
+L2,L1,L2,L2,	85
+L2,L1,L2,LLC,	17
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	5
+L2,L1,LLC,LLC,	5
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	7
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	2
+L2,L2,L2,L2,	24
+L2,L2,L2,LLC,	12
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	2
+L2,LLC,L2,L2,	1
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	6
+LLC,L1,L1,L2,	5
+LLC,L1,L1,LLC,	3
+LLC,L1,L2,L1,	5
+LLC,L1,L2,L2,	16
+LLC,L1,L2,LLC,	9
+LLC,L1,LLC,L2,	3
+LLC,L1,LLC,LLC,	1
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	1
+LLC,L2,L2,L2,	4
+LLC,L2,L2,LLC,	3
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	3
+LLC,LLC,L2,LLC,	2
+
+
+
+
+Heartbeat. 25165824 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       16,807,945
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        7,069,386
+    Misses:                        983,194
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.21%
+  TLB-LL stats:
+    Hits:                          964,970
+    Misses:                         18,224
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  1.85%
+    Child hits:                 23,877,331
+    Total miss rate:                  0.07%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       17,254,982
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        7,029,300
+    Misses:                      1,071,954
+    Invalidations:                       0
+    Hits PT level     1:              18,061
+    Misses PT level   1:                 363
+    Hits PT level     2:              18,131
+    Misses PT level   2:                 293
+    Hits PT level     3:              12,107
+    Misses PT level   3:               6,317
+    Hits PT level     4:              10,753
+    Misses PT level   4:               7,671
+    Prefetch hits:                 283,710
+    Prefetch misses:               802,888
+    Miss rate:                       13.23%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           58,045
+    Misses:                      1,013,911
+    Invalidations:                       0
+    Hits PT level     1:                 284
+    Misses PT level   1:                  79
+    Hits PT level     2:                 254
+    Misses PT level   2:                  39
+    Hits PT level     3:               5,830
+    Misses PT level   3:                 487
+    Hits PT level     4:               5,724
+    Misses PT level   4:               1,947
+    Prefetch hits:                  42,425
+    Prefetch misses:               760,463
+    Local miss rate:                 94.59%
+    Child hits:                 24,627,044
+    Total miss rate:                  3.95%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                          833,862
+    Misses:                        180,049
+    Invalidations:                       0
+    Hits PT level     1:                  79
+    Misses PT level   1:                   0
+    Hits PT level     2:                  39
+    Misses PT level   2:                   0
+    Hits PT level     3:                 487
+    Misses PT level   3:                   0
+    Hits PT level     4:               1,921
+    Misses PT level   4:                  26
+    Prefetch hits:                 579,255
+    Prefetch misses:               181,208
+    Local miss rate:                 17.76%
+    Child hits:                    112,562
+    Total miss rate:                 15.98%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 25165824
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	23
+L1,L1,L1,L1,	9617
+L1,L1,L1,L2,	1963
+L1,L1,L1,LLC,	599
+L1,L1,L2,MEMORY,	9
+L1,L1,L2,L1,	1232
+L1,L1,L2,L2,	3275
+L1,L1,L2,LLC,	1007
+L1,L1,LLC,MEMORY,	2
+L1,L1,LLC,L1,	40
+L1,L1,LLC,L2,	207
+L1,L1,LLC,LLC,	193
+L1,L2,L1,L1,	20
+L1,L2,L1,L2,	23
+L1,L2,L1,LLC,	9
+L1,L2,L2,L1,	15
+L1,L2,L2,L2,	53
+L1,L2,L2,LLC,	21
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	5
+L1,L2,LLC,LLC,	8
+L1,LLC,L1,L1,	8
+L1,LLC,L1,L2,	1
+L1,LLC,L1,LLC,	1
+L1,LLC,L2,L2,	10
+L1,LLC,L2,LLC,	4
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	21
+L2,L1,L1,L2,	29
+L2,L1,L1,LLC,	3
+L2,L1,L2,L1,	11
+L2,L1,L2,L2,	92
+L2,L1,L2,LLC,	22
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	6
+L2,L1,LLC,LLC,	7
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	14
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	4
+L2,L2,L2,L2,	35
+L2,L2,L2,LLC,	17
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	4
+L2,LLC,L2,L2,	3
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	9
+LLC,L1,L1,L2,	6
+LLC,L1,L1,LLC,	4
+LLC,L1,L2,L1,	5
+LLC,L1,L2,L2,	19
+LLC,L1,L2,LLC,	9
+LLC,L1,LLC,L2,	3
+LLC,L1,LLC,LLC,	2
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	2
+LLC,L2,L2,L1,	1
+LLC,L2,L2,L2,	4
+LLC,L2,L2,LLC,	4
+LLC,L2,LLC,L2,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	3
+LLC,LLC,L2,LLC,	3
+LLC,LLC,LLC,LLC,	1
+
+
+
+
+Heartbeat. 29360128 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       19,657,360
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        8,252,708
+    Misses:                      1,143,871
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.17%
+  TLB-LL stats:
+    Hits:                        1,121,411
+    Misses:                         22,460
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  1.96%
+    Child hits:                 27,910,068
+    Total miss rate:                  0.08%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       20,161,181
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        8,194,916
+    Misses:                      1,250,337
+    Invalidations:                       0
+    Hits PT level     1:              22,291
+    Misses PT level   1:                 369
+    Hits PT level     2:              22,343
+    Misses PT level   2:                 317
+    Hits PT level     3:              15,181
+    Misses PT level   3:               7,479
+    Hits PT level     4:              13,332
+    Misses PT level   4:               9,328
+    Prefetch hits:                 329,521
+    Prefetch misses:               938,309
+    Miss rate:                       13.24%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           66,689
+    Misses:                      1,183,650
+    Invalidations:                       0
+    Hits PT level     1:                 286
+    Misses PT level   1:                  83
+    Hits PT level     2:                 271
+    Misses PT level   2:                  46
+    Hits PT level     3:               6,913
+    Misses PT level   3:                 566
+    Hits PT level     4:               7,038
+    Misses PT level   4:               2,290
+    Prefetch hits:                  49,134
+    Prefetch misses:               889,175
+    Local miss rate:                 94.67%
+    Child hits:                 28,758,765
+    Total miss rate:                  3.94%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                          969,225
+    Misses:                        214,425
+    Invalidations:                       0
+    Hits PT level     1:                  83
+    Misses PT level   1:                   0
+    Hits PT level     2:                  46
+    Misses PT level   2:                   0
+    Hits PT level     3:                 566
+    Misses PT level   3:                   0
+    Hits PT level     4:               2,263
+    Misses PT level   4:                  27
+    Prefetch hits:                 673,424
+    Prefetch misses:               215,751
+    Local miss rate:                 18.12%
+    Child hits:                    130,331
+    Total miss rate:                 16.32%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 29360128
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	23
+L1,L1,L1,L1,	11993
+L1,L1,L1,L2,	2523
+L1,L1,L1,LLC,	729
+L1,L1,L2,MEMORY,	10
+L1,L1,L2,L1,	1427
+L1,L1,L2,L2,	3962
+L1,L1,L2,LLC,	1187
+L1,L1,LLC,MEMORY,	2
+L1,L1,LLC,L1,	44
+L1,L1,LLC,L2,	254
+L1,L1,LLC,LLC,	219
+L1,L2,L1,L1,	20
+L1,L2,L1,L2,	24
+L1,L2,L1,LLC,	9
+L1,L2,L2,L1,	17
+L1,L2,L2,L2,	63
+L1,L2,L2,LLC,	24
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	6
+L1,L2,LLC,LLC,	8
+L1,LLC,L1,L1,	10
+L1,LLC,L1,L2,	3
+L1,LLC,L1,LLC,	1
+L1,LLC,L2,L2,	11
+L1,LLC,L2,LLC,	6
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	21
+L2,L1,L1,L2,	30
+L2,L1,L1,LLC,	3
+L2,L1,L2,L1,	11
+L2,L1,L2,L2,	92
+L2,L1,L2,LLC,	22
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	7
+L2,L1,LLC,LLC,	7
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	14
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	4
+L2,L2,L2,L2,	35
+L2,L2,L2,LLC,	17
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	4
+L2,LLC,L2,L2,	3
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	9
+LLC,L1,L1,L2,	8
+LLC,L1,L1,LLC,	4
+LLC,L1,L2,L1,	5
+LLC,L1,L2,L2,	20
+LLC,L1,L2,LLC,	10
+LLC,L1,LLC,L2,	3
+LLC,L1,LLC,LLC,	2
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	2
+LLC,L2,L2,L1,	1
+LLC,L2,L2,L2,	4
+LLC,L2,L2,LLC,	4
+LLC,L2,LLC,L2,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	3
+LLC,LLC,L2,LLC,	3
+LLC,LLC,LLC,LLC,	1
+
+
+
+
+Heartbeat. 33554432 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       22,488,334
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                        9,446,490
+    Misses:                      1,312,551
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.20%
+  TLB-LL stats:
+    Hits:                        1,284,169
+    Misses:                         28,382
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  2.16%
+    Child hits:                 31,934,824
+    Total miss rate:                  0.09%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       23,055,034
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                        9,402,220
+    Misses:                      1,405,495
+    Invalidations:                       0
+    Hits PT level     1:              28,209
+    Misses PT level   1:                 373
+    Hits PT level     2:              28,245
+    Misses PT level   2:                 337
+    Hits PT level     3:              20,090
+    Misses PT level   3:               8,492
+    Hits PT level     4:              17,947
+    Misses PT level   4:              10,635
+    Prefetch hits:                 369,890
+    Prefetch misses:             1,055,442
+    Miss rate:                       13.00%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           75,179
+    Misses:                      1,330,318
+    Invalidations:                       0
+    Hits PT level     1:                 287
+    Misses PT level   1:                  86
+    Hits PT level     2:                 285
+    Misses PT level   2:                  52
+    Hits PT level     3:               7,839
+    Misses PT level   3:                 653
+    Hits PT level     4:               8,020
+    Misses PT level   4:               2,615
+    Prefetch hits:                  55,128
+    Prefetch misses:             1,000,314
+    Local miss rate:                 94.65%
+    Child hits:                 32,921,635
+    Total miss rate:                  3.88%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                        1,088,111
+    Misses:                        242,207
+    Invalidations:                       0
+    Hits PT level     1:                  86
+    Misses PT level   1:                   0
+    Hits PT level     2:                  52
+    Misses PT level   2:                   0
+    Hits PT level     3:                 653
+    Misses PT level   3:                   0
+    Hits PT level     4:               2,585
+    Misses PT level   4:                  30
+    Prefetch hits:                 755,885
+    Prefetch misses:               244,429
+    Local miss rate:                 18.21%
+    Child hits:                    146,738
+    Total miss rate:                 16.40%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 33554432
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	23
+L1,L1,L1,L1,	16401
+L1,L1,L1,L2,	2902
+L1,L1,L1,LLC,	843
+L1,L1,L2,MEMORY,	13
+L1,L1,L2,L1,	1620
+L1,L1,L2,L2,	4505
+L1,L1,L2,LLC,	1361
+L1,L1,LLC,MEMORY,	2
+L1,L1,LLC,L1,	56
+L1,L1,LLC,L2,	298
+L1,L1,LLC,LLC,	249
+L1,L2,L1,L1,	21
+L1,L2,L1,L2,	28
+L1,L2,L1,LLC,	10
+L1,L2,L2,L1,	18
+L1,L2,L2,L2,	67
+L1,L2,L2,LLC,	25
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	7
+L1,L2,LLC,LLC,	8
+L1,LLC,L1,L1,	10
+L1,LLC,L1,L2,	4
+L1,LLC,L1,LLC,	1
+L1,LLC,L2,L2,	13
+L1,LLC,L2,LLC,	8
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	21
+L2,L1,L1,L2,	30
+L2,L1,L1,LLC,	3
+L2,L1,L2,L1,	11
+L2,L1,L2,L2,	93
+L2,L1,L2,LLC,	22
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	7
+L2,L1,LLC,LLC,	7
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	14
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	4
+L2,L2,L2,L2,	35
+L2,L2,L2,LLC,	17
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	4
+L2,LLC,L2,L2,	3
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	9
+LLC,L1,L1,L2,	9
+LLC,L1,L1,LLC,	4
+LLC,L1,L2,L1,	5
+LLC,L1,L2,L2,	20
+LLC,L1,L2,LLC,	10
+LLC,L1,LLC,L2,	3
+LLC,L1,LLC,LLC,	2
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	2
+LLC,L2,L2,L1,	1
+LLC,L2,L2,L2,	5
+LLC,L2,L2,LLC,	4
+LLC,L2,LLC,L2,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	4
+LLC,LLC,L2,LLC,	3
+LLC,LLC,LLC,LLC,	1
+
+
+
+
+Heartbeat. 37748736 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       25,321,847
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                       10,641,637
+    Misses:                      1,477,321
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.19%
+  TLB-LL stats:
+    Hits:                        1,445,262
+    Misses:                         32,059
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  2.17%
+    Child hits:                 35,963,484
+    Total miss rate:                  0.09%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       25,949,907
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                       10,601,070
+    Misses:                      1,566,562
+    Invalidations:                       0
+    Hits PT level     1:              31,869
+    Misses PT level   1:                 390
+    Hits PT level     2:              31,919
+    Misses PT level   2:                 340
+    Hits PT level     3:              22,766
+    Misses PT level   3:               9,493
+    Hits PT level     4:              20,272
+    Misses PT level   4:              11,987
+    Prefetch hits:                 411,408
+    Prefetch misses:             1,177,364
+    Miss rate:                       12.87%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           83,204
+    Misses:                      1,483,360
+    Invalidations:                       0
+    Hits PT level     1:                 297
+    Misses PT level   1:                  93
+    Hits PT level     2:                 286
+    Misses PT level   2:                  54
+    Hits PT level     3:               8,779
+    Misses PT level   3:                 714
+    Hits PT level     4:               9,070
+    Misses PT level   4:               2,917
+    Prefetch hits:                  61,374
+    Prefetch misses:             1,115,990
+    Local miss rate:                 94.69%
+    Child hits:                 37,069,211
+    Total miss rate:                  3.84%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                        1,211,995
+    Misses:                        271,365
+    Invalidations:                       0
+    Hits PT level     1:                  93
+    Misses PT level   1:                   0
+    Hits PT level     2:                  54
+    Misses PT level   2:                   0
+    Hits PT level     3:                 714
+    Misses PT level   3:                   0
+    Hits PT level     4:               2,886
+    Misses PT level   4:                  31
+    Prefetch hits:                 841,869
+    Prefetch misses:               274,121
+    Local miss rate:                 18.29%
+    Child hits:                    163,010
+    Total miss rate:                 16.48%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 37748736
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	23
+L1,L1,L1,L1,	18512
+L1,L1,L1,L2,	3359
+L1,L1,L1,LLC,	947
+L1,L1,L2,MEMORY,	14
+L1,L1,L2,L1,	1825
+L1,L1,L2,L2,	5068
+L1,L1,L2,LLC,	1519
+L1,L1,LLC,MEMORY,	2
+L1,L1,LLC,L1,	62
+L1,L1,LLC,L2,	323
+L1,L1,LLC,LLC,	278
+L1,L2,L1,L1,	21
+L1,L2,L1,L2,	28
+L1,L2,L1,LLC,	10
+L1,L2,L2,L1,	18
+L1,L2,L2,L2,	67
+L1,L2,L2,LLC,	25
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	7
+L1,L2,LLC,LLC,	8
+L1,LLC,L1,L1,	10
+L1,LLC,L1,L2,	4
+L1,LLC,L1,LLC,	1
+L1,LLC,L2,L2,	14
+L1,LLC,L2,LLC,	8
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	23
+L2,L1,L1,L2,	31
+L2,L1,L1,LLC,	3
+L2,L1,L2,L1,	12
+L2,L1,L2,L2,	93
+L2,L1,L2,LLC,	28
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	7
+L2,L1,LLC,LLC,	7
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	14
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	4
+L2,L2,L2,L2,	35
+L2,L2,L2,LLC,	17
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	4
+L2,LLC,L2,L2,	3
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	9
+LLC,L1,L1,L2,	9
+LLC,L1,L1,LLC,	4
+LLC,L1,L2,L1,	5
+LLC,L1,L2,L2,	22
+LLC,L1,L2,LLC,	12
+LLC,L1,LLC,L2,	4
+LLC,L1,LLC,LLC,	2
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	2
+LLC,L2,L1,LLC,	1
+LLC,L2,L2,L1,	1
+LLC,L2,L2,L2,	5
+LLC,L2,L2,LLC,	4
+LLC,L2,LLC,L2,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	4
+LLC,LLC,L2,LLC,	4
+LLC,LLC,LLC,LLC,	1
+
+
+
+
+Heartbeat. 41943040 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       28,162,842
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                       11,832,587
+    Misses:                      1,638,802
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.17%
+  TLB-LL stats:
+    Hits:                        1,602,748
+    Misses:                         36,054
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  2.20%
+    Child hits:                 39,995,429
+    Total miss rate:                  0.09%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       28,850,786
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                       11,788,225
+    Misses:                      1,731,838
+    Invalidations:                       0
+    Hits PT level     1:              35,853
+    Misses PT level   1:                 401
+    Hits PT level     2:              35,911
+    Misses PT level   2:                 343
+    Hits PT level     3:              25,707
+    Misses PT level   3:              10,547
+    Hits PT level     4:              22,780
+    Misses PT level   4:              13,474
+    Prefetch hits:                 453,668
+    Prefetch misses:             1,302,935
+    Miss rate:                       12.81%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                           91,228
+    Misses:                      1,640,612
+    Invalidations:                       0
+    Hits PT level     1:                 303
+    Misses PT level   1:                  98
+    Hits PT level     2:                 286
+    Misses PT level   2:                  57
+    Hits PT level     3:               9,772
+    Misses PT level   3:                 775
+    Hits PT level     4:              10,248
+    Misses PT level   4:               3,226
+    Prefetch hits:                  67,797
+    Prefetch misses:             1,235,138
+    Local miss rate:                 94.73%
+    Child hits:                 41,212,930
+    Total miss rate:                  3.82%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                        1,337,535
+    Misses:                        303,077
+    Invalidations:                       0
+    Hits PT level     1:                  98
+    Misses PT level   1:                   0
+    Hits PT level     2:                  57
+    Misses PT level   2:                   0
+    Hits PT level     3:                 775
+    Misses PT level   3:                   0
+    Hits PT level     4:               3,192
+    Misses PT level   4:                  34
+    Prefetch hits:                 928,975
+    Prefetch misses:               306,163
+    Local miss rate:                 18.47%
+    Child hits:                    179,634
+    Total miss rate:                 16.65%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 41943040
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,L1,MEMORY,	26
+L1,L1,L1,L1,	20819
+L1,L1,L1,L2,	3854
+L1,L1,L1,LLC,	1074
+L1,L1,L2,MEMORY,	14
+L1,L1,L2,L1,	2023
+L1,L1,L2,L2,	5708
+L1,L1,L2,LLC,	1671
+L1,L1,LLC,MEMORY,	2
+L1,L1,LLC,L1,	62
+L1,L1,LLC,L2,	358
+L1,L1,LLC,LLC,	302
+L1,L2,L1,L1,	21
+L1,L2,L1,L2,	28
+L1,L2,L1,LLC,	10
+L1,L2,L2,L1,	18
+L1,L2,L2,L2,	67
+L1,L2,L2,LLC,	25
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	7
+L1,L2,LLC,LLC,	8
+L1,LLC,L1,L1,	11
+L1,LLC,L1,L2,	4
+L1,LLC,L1,LLC,	2
+L1,LLC,L2,L2,	14
+L1,LLC,L2,LLC,	9
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	24
+L2,L1,L1,L2,	35
+L2,L1,L1,LLC,	3
+L2,L1,L2,L1,	12
+L2,L1,L2,L2,	94
+L2,L1,L2,LLC,	28
+L2,L1,LLC,L1,	3
+L2,L1,LLC,L2,	7
+L2,L1,LLC,LLC,	7
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	14
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	4
+L2,L2,L2,L2,	35
+L2,L2,L2,LLC,	17
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	4
+L2,LLC,L2,L2,	3
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	10
+LLC,L1,L1,L2,	10
+LLC,L1,L1,LLC,	4
+LLC,L1,L2,L1,	5
+LLC,L1,L2,L2,	23
+LLC,L1,L2,LLC,	12
+LLC,L1,LLC,L2,	5
+LLC,L1,LLC,LLC,	3
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	2
+LLC,L2,L1,LLC,	1
+LLC,L2,L2,L1,	1
+LLC,L2,L2,L2,	5
+LLC,L2,L2,LLC,	4
+LLC,L2,LLC,L2,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	4
+LLC,LLC,L2,LLC,	4
+LLC,LLC,LLC,LLC,	1
+
+
+
+
+Heartbeat. 46137344 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       31,002,596
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                       13,021,164
+    Misses:                      1,803,887
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.17%
+  TLB-LL stats:
+    Hits:                        1,763,398
+    Misses:                         40,489
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  2.24%
+    Child hits:                 44,023,760
+    Total miss rate:                  0.09%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       31,747,128
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                       12,957,784
+    Misses:                      1,915,941
+    Invalidations:                       0
+    Hits PT level     1:              40,257
+    Misses PT level   1:                 432
+    Hits PT level     2:              40,344
+    Misses PT level   2:                 345
+    Hits PT level     3:              28,985
+    Misses PT level   3:              11,704
+    Hits PT level     4:              25,738
+    Misses PT level   4:              14,951
+    Prefetch hits:                 502,243
+    Prefetch misses:             1,441,130
+    Miss rate:                       12.88%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                          100,329
+    Misses:                      1,815,614
+    Invalidations:                       0
+    Hits PT level     1:                 321
+    Misses PT level   1:                 111
+    Hits PT level     2:                 286
+    Misses PT level   2:                  59
+    Hits PT level     3:              10,846
+    Misses PT level   3:                 858
+    Hits PT level     4:              11,415
+    Misses PT level   4:               3,536
+    Prefetch hits:                  74,974
+    Prefetch misses:             1,366,156
+    Local miss rate:                 94.76%
+    Child hits:                 45,342,479
+    Total miss rate:                  3.84%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                        1,482,627
+    Misses:                        332,987
+    Invalidations:                       0
+    Hits PT level     1:                 111
+    Misses PT level   1:                   0
+    Hits PT level     2:                  59
+    Misses PT level   2:                   0
+    Hits PT level     3:                 857
+    Misses PT level   3:                   1
+    Hits PT level     4:               3,498
+    Misses PT level   4:                  38
+    Prefetch hits:               1,029,578
+    Prefetch misses:               336,578
+    Local miss rate:                 18.34%
+    Child hits:                    198,171
+    Total miss rate:                 16.54%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 46137344
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,MEMORY,L2,	1
+L1,L1,L1,MEMORY,	28
+L1,L1,L1,L1,	23546
+L1,L1,L1,L2,	4262
+L1,L1,L1,LLC,	1204
+L1,L1,L2,MEMORY,	15
+L1,L1,L2,L1,	2240
+L1,L1,L2,L2,	6396
+L1,L1,L2,LLC,	1818
+L1,L1,LLC,MEMORY,	3
+L1,L1,LLC,L1,	66
+L1,L1,LLC,L2,	408
+L1,L1,LLC,LLC,	328
+L1,L2,L1,L1,	21
+L1,L2,L1,L2,	28
+L1,L2,L1,LLC,	10
+L1,L2,L2,L1,	18
+L1,L2,L2,L2,	67
+L1,L2,L2,LLC,	25
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	7
+L1,L2,LLC,LLC,	8
+L1,LLC,L1,L1,	11
+L1,LLC,L1,L2,	5
+L1,LLC,L1,LLC,	2
+L1,LLC,L2,L2,	15
+L1,LLC,L2,LLC,	9
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	25
+L2,L1,L1,L2,	37
+L2,L1,L1,LLC,	5
+L2,L1,L2,L1,	14
+L2,L1,L2,L2,	104
+L2,L1,L2,LLC,	28
+L2,L1,LLC,L1,	4
+L2,L1,LLC,L2,	7
+L2,L1,LLC,LLC,	7
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	14
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	4
+L2,L2,L2,L2,	35
+L2,L2,L2,LLC,	17
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	4
+L2,LLC,L2,L2,	3
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	13
+LLC,L1,L1,L2,	12
+LLC,L1,L1,LLC,	4
+LLC,L1,L2,L1,	8
+LLC,L1,L2,L2,	27
+LLC,L1,L2,LLC,	13
+LLC,L1,LLC,L2,	5
+LLC,L1,LLC,LLC,	3
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	2
+LLC,L2,L1,LLC,	1
+LLC,L2,L2,L1,	1
+LLC,L2,L2,L2,	5
+LLC,L2,L2,LLC,	4
+LLC,L2,LLC,L2,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	4
+LLC,LLC,L2,LLC,	4
+LLC,LLC,LLC,LLC,	1
+
+
+
+
+Heartbeat. 50331648 memrequests processed.
+TLB simulation results:
+Core #0 (1 thread(s))
+  TLB-L1I stats:
+    Hits:                       33,849,722
+    Misses:                              0
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  TLB-L1D stats:
+    Hits:                       14,210,401
+    Misses:                      1,960,940
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                       12.13%
+  TLB-LL stats:
+    Hits:                        1,915,578
+    Misses:                         45,362
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Local miss rate:                  2.31%
+    Child hits:                 48,060,123
+    Total miss rate:                  0.09%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+Cache simulation results:
+Core #0 (1 thread(s))
+  L1I stats:
+    Warmup hits:                   103,844
+    Warmup misses:                       7
+    Hits:                       34,651,638
+    Misses:                              2
+    Invalidations:                       0
+    Hits PT level     1:                   0
+    Misses PT level   1:                   0
+    Hits PT level     2:                   0
+    Misses PT level   2:                   0
+    Hits PT level     3:                   0
+    Misses PT level   3:                   0
+    Hits PT level     4:                   0
+    Misses PT level   4:                   0
+    Miss rate:                        0.00%
+  L1D stats:
+    Warmup hits:                    39,248
+    Warmup misses:                   8,424
+    Hits:                       14,128,576
+    Misses:                      2,091,439
+    Invalidations:                       0
+    Hits PT level     1:              45,129
+    Misses PT level   1:                 433
+    Hits PT level     2:              45,217
+    Misses PT level   2:                 345
+    Hits PT level     3:              32,718
+    Misses PT level   3:              12,844
+    Hits PT level     4:              29,118
+    Misses PT level   4:              16,444
+    Prefetch hits:                 547,020
+    Prefetch misses:             1,574,485
+    Miss rate:                       12.89%
+  L2 stats:
+    Warmup hits:                         8
+    Warmup misses:                   8,423
+    Hits:                          108,901
+    Misses:                      1,982,540
+    Invalidations:                       0
+    Hits PT level     1:                 321
+    Misses PT level   1:                 112
+    Hits PT level     2:                 286
+    Misses PT level   2:                  59
+    Hits PT level     3:              11,884
+    Misses PT level   3:                 960
+    Hits PT level     4:              12,588
+    Misses PT level   4:               3,856
+    Prefetch hits:                  81,425
+    Prefetch misses:             1,493,060
+    Local miss rate:                 94.79%
+    Child hits:                 49,479,416
+    Total miss rate:                  3.84%
+Core #1 (0 thread(s))
+Core #2 (0 thread(s))
+Core #3 (0 thread(s))
+LLC stats:
+    Warmup hits:                         1
+    Warmup misses:                   8,422
+    Hits:                        1,615,720
+    Misses:                        366,820
+    Invalidations:                       0
+    Hits PT level     1:                 112
+    Misses PT level   1:                   0
+    Hits PT level     2:                  59
+    Misses PT level   2:                   0
+    Hits PT level     3:                 959
+    Misses PT level   3:                   1
+    Hits PT level     4:               3,814
+    Misses PT level   4:                  42
+    Prefetch hits:               1,122,363
+    Prefetch misses:               370,697
+    Local miss rate:                 18.50%
+    Child hits:                    215,405
+    Total miss rate:                 16.69%
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+num_requests : 50331648
+num_not_found : 0
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+MEMORY,MEMORY,MEMORY,MEMORY,	2
+L1,MEMORY,MEMORY,MEMORY,	1
+L1,L1,MEMORY,MEMORY,	4
+L1,L1,MEMORY,L2,	1
+L1,L1,L1,MEMORY,	30
+L1,L1,L1,L1,	26648
+L1,L1,L1,L2,	4759
+L1,L1,L1,LLC,	1335
+L1,L1,L2,MEMORY,	17
+L1,L1,L2,L1,	2508
+L1,L1,L2,L2,	7021
+L1,L1,L2,LLC,	1961
+L1,L1,LLC,MEMORY,	3
+L1,L1,LLC,L1,	76
+L1,L1,LLC,L2,	459
+L1,L1,LLC,LLC,	369
+L1,L2,L1,L1,	21
+L1,L2,L1,L2,	28
+L1,L2,L1,LLC,	10
+L1,L2,L2,L1,	18
+L1,L2,L2,L2,	67
+L1,L2,L2,LLC,	25
+L1,L2,LLC,L1,	1
+L1,L2,LLC,L2,	7
+L1,L2,LLC,LLC,	8
+L1,LLC,L1,L1,	11
+L1,LLC,L1,L2,	5
+L1,LLC,L1,LLC,	2
+L1,LLC,L2,L2,	15
+L1,LLC,L2,LLC,	9
+L1,LLC,LLC,L2,	1
+L1,LLC,LLC,LLC,	1
+L2,L1,L1,L1,	25
+L2,L1,L1,L2,	37
+L2,L1,L1,LLC,	5
+L2,L1,L2,L1,	14
+L2,L1,L2,L2,	104
+L2,L1,L2,LLC,	28
+L2,L1,LLC,L1,	4
+L2,L1,LLC,L2,	7
+L2,L1,LLC,LLC,	7
+L2,L2,L1,L1,	2
+L2,L2,L1,L2,	14
+L2,L2,L1,LLC,	5
+L2,L2,L2,L1,	4
+L2,L2,L2,L2,	35
+L2,L2,L2,LLC,	17
+L2,L2,LLC,L2,	5
+L2,L2,LLC,LLC,	4
+L2,LLC,L2,L2,	3
+L2,LLC,LLC,LLC,	1
+LLC,L1,L1,L1,	13
+LLC,L1,L1,L2,	12
+LLC,L1,L1,LLC,	5
+LLC,L1,L2,L1,	8
+LLC,L1,L2,L2,	27
+LLC,L1,L2,LLC,	13
+LLC,L1,LLC,L2,	5
+LLC,L1,LLC,LLC,	3
+LLC,L2,L1,L1,	2
+LLC,L2,L1,L2,	2
+LLC,L2,L1,LLC,	1
+LLC,L2,L2,L1,	1
+LLC,L2,L2,L2,	5
+LLC,L2,L2,LLC,	4
+LLC,L2,LLC,L2,	1
+LLC,LLC,L1,MEMORY,	1
+LLC,LLC,L1,L1,	1
+LLC,LLC,L1,L2,	1
+LLC,LLC,L2,L2,	4
+LLC,LLC,L2,LLC,	4
+LLC,LLC,LLC,LLC,	1
+
+
+
+
+Interrupted: exiting.
+ 
\ No newline at end of file
